Submitting changes (commit: 537b76e)...

[32mâš¡ This is a turbo test run. https://codecrafters.io/turbo[0m

Running tests. Logs should appear shortly...

[33m[compile][0m Moved ./.codecrafters/run.sh â†’ ./your_program.sh
[33m[compile][0m [32mCompilation successful.[0m

Debug = true

[33m[tester::#XY1] [0m[94mRunning tests for Stage #XY1 (Statements & State - Print: Generate output)[0m
[33m[tester::#XY1] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#XY1] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XY1] [test-1.lox] [0m// This program prints a boolean
[33m[tester::#XY1] [test-1.lox] [0mprint true;
[33m[tester::#XY1] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#XY1] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#XY1] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XY1] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#XY1] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XY1] [test-2.lox] [0m// This program prints the result of the concatenation of three strings
[33m[tester::#XY1] [test-2.lox] [0mprint "bar" + "world" + "hello";
[33m[tester::#XY1] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mbarworldhello
[33m[tester::#XY1] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#XY1] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XY1] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#XY1] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XY1] [test-3.lox] [0m// This program prints the result of an arithmetic expression
[33m[tester::#XY1] [test-3.lox] [0mprint (85 * 2 + 91 * 2) / (2);
[33m[tester::#XY1] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m176
[33m[tester::#XY1] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#XY1] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XY1] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#XY1] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XY1] [test-4.lox] [0m// Print statements expect an expression
[33m[tester::#XY1] [test-4.lox] [0m// So, this program leads to a compilation error
[33m[tester::#XY1] [test-4.lox] [0mprint;
[33m[tester::#XY1] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[tester::#XY1] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#XY1] [test-4] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#XY1] [0m[92mTest passed.[0m

[33m[tester::#IB5] [0m[94mRunning tests for Stage #IB5 (Evaluating Expressions - Runtime Errors: Relational Operators)[0m
[33m[tester::#IB5] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#IB5] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#IB5] [test-1.lox] [0m"quz" < false
[33m[tester::#IB5] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be numbers.
[33m[your_program] [0m[line 1]
[33m[tester::#IB5] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#IB5] [test-1] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#IB5] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#IB5] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#IB5] [test-2.lox] [0mfalse <= (52 + 81)
[33m[tester::#IB5] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be numbers.
[33m[your_program] [0m[line 1]
[33m[tester::#IB5] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#IB5] [test-2] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#IB5] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#IB5] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#IB5] [test-3.lox] [0m77 > ("world" + "bar")
[33m[tester::#IB5] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be numbers.
[33m[your_program] [0m[line 1]
[33m[tester::#IB5] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#IB5] [test-3] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#IB5] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#IB5] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#IB5] [test-4.lox] [0mfalse >= false
[33m[tester::#IB5] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be numbers.
[33m[your_program] [0m[line 1]
[33m[tester::#IB5] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#IB5] [test-4] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#IB5] [0m[92mTest passed.[0m

[33m[tester::#CQ1] [0m[94mRunning tests for Stage #CQ1 (Evaluating Expressions - Runtime Errors: Binary Operators (2/2))[0m
[33m[tester::#CQ1] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#CQ1] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#CQ1] [test-1.lox] [0m"hello" + false
[33m[tester::#CQ1] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be two numbers or two strings.
[33m[your_program] [0m[line 1]
[33m[tester::#CQ1] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#CQ1] [test-1] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#CQ1] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#CQ1] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#CQ1] [test-2.lox] [0m81 + "foo" + 81
[33m[tester::#CQ1] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be two numbers or two strings.
[33m[your_program] [0m[line 1]
[33m[tester::#CQ1] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#CQ1] [test-2] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#CQ1] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#CQ1] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#CQ1] [test-3.lox] [0m59 - false
[33m[tester::#CQ1] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be two numbers or two strings.
[33m[your_program] [0m[line 1]
[33m[tester::#CQ1] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#CQ1] [test-3] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#CQ1] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#CQ1] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#CQ1] [test-4.lox] [0mfalse - ("baz" + "foo")
[33m[tester::#CQ1] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be two numbers or two strings.
[33m[your_program] [0m[line 1]
[33m[tester::#CQ1] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#CQ1] [test-4] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#CQ1] [0m[92mTest passed.[0m

[33m[tester::#YU6] [0m[94mRunning tests for Stage #YU6 (Evaluating Expressions - Runtime Errors: Binary Operators (1/2))[0m
[33m[tester::#YU6] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#YU6] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YU6] [test-1.lox] [0m81 * "hello"
[33m[tester::#YU6] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be numbers.
[33m[your_program] [0m[line 1]
[33m[tester::#YU6] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YU6] [test-1] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#YU6] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#YU6] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YU6] [test-2.lox] [0m"hello" / 89
[33m[tester::#YU6] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be numbers.
[33m[your_program] [0m[line 1]
[33m[tester::#YU6] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YU6] [test-2] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#YU6] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#YU6] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YU6] [test-3.lox] [0mtrue / false
[33m[tester::#YU6] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be numbers.
[33m[your_program] [0m[line 1]
[33m[tester::#YU6] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YU6] [test-3] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#YU6] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#YU6] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YU6] [test-4.lox] [0m("quz" + "hello") * ("hello" + "quz")
[33m[tester::#YU6] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperands must be numbers.
[33m[your_program] [0m[line 1]
[33m[tester::#YU6] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YU6] [test-4] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#YU6] [0m[92mTest passed.[0m

[33m[tester::#GJ9] [0m[94mRunning tests for Stage #GJ9 (Evaluating Expressions - Runtime Errors: Unary Operators)[0m
[33m[tester::#GJ9] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#GJ9] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#GJ9] [test-1.lox] [0m-"baz"
[33m[tester::#GJ9] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperand must be a number.
[33m[your_program] [0m[line 1]
[33m[tester::#GJ9] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#GJ9] [test-1] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#GJ9] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#GJ9] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#GJ9] [test-2.lox] [0m-true
[33m[tester::#GJ9] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperand must be a number.
[33m[your_program] [0m[line 1]
[33m[tester::#GJ9] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#GJ9] [test-2] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#GJ9] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#GJ9] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#GJ9] [test-3.lox] [0m-false
[33m[tester::#GJ9] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperand must be a number.
[33m[your_program] [0m[line 1]
[33m[tester::#GJ9] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#GJ9] [test-3] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#GJ9] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#GJ9] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#GJ9] [test-4.lox] [0m-("foo" + "world")
[33m[tester::#GJ9] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mOperand must be a number.
[33m[your_program] [0m[line 1]
[33m[tester::#GJ9] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#GJ9] [test-4] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#GJ9] [0m[92mTest passed.[0m

[33m[tester::#HW7] [0m[94mRunning tests for Stage #HW7 (Evaluating Expressions - Equality Operators)[0m
[33m[tester::#HW7] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#HW7] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#HW7] [test-1.lox] [0m"world" != "hello"
[33m[tester::#HW7] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#HW7] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#HW7] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#HW7] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#HW7] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#HW7] [test-2.lox] [0m"world" == "world"
[33m[tester::#HW7] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#HW7] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#HW7] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#HW7] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#HW7] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#HW7] [test-3.lox] [0m39 == "39"
[33m[tester::#HW7] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mfalse
[33m[tester::#HW7] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#HW7] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#HW7] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#HW7] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#HW7] [test-4.lox] [0m47 == (36 + 11)
[33m[tester::#HW7] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#HW7] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#HW7] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#HW7] [0m[92mTest passed.[0m

[33m[tester::#ET4] [0m[94mRunning tests for Stage #ET4 (Evaluating Expressions - Relational Operators)[0m
[33m[tester::#ET4] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#ET4] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ET4] [test-1.lox] [0m70 > -145
[33m[tester::#ET4] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#ET4] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#ET4] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ET4] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#ET4] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ET4] [test-2.lox] [0m70 <= 180
[33m[tester::#ET4] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#ET4] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#ET4] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ET4] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#ET4] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ET4] [test-3.lox] [0m35 >= 35
[33m[tester::#ET4] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#ET4] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#ET4] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ET4] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#ET4] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ET4] [test-4.lox] [0m(57 - 84) >= -(140 / 70 + 54)
[33m[tester::#ET4] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#ET4] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#ET4] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ET4] [0m[92mTest passed.[0m

[33m[tester::#JX8] [0m[94mRunning tests for Stage #JX8 (Evaluating Expressions - String Concatenation)[0m
[33m[tester::#JX8] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#JX8] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#JX8] [test-1.lox] [0m"baz" + "baz"
[33m[tester::#JX8] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mbazbaz
[33m[tester::#JX8] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#JX8] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#JX8] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#JX8] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#JX8] [test-2.lox] [0m"quz" + "50"
[33m[tester::#JX8] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mquz50
[33m[tester::#JX8] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#JX8] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#JX8] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#JX8] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#JX8] [test-3.lox] [0m"bar" + "hello" + "foo"
[33m[tester::#JX8] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mbarhellofoo
[33m[tester::#JX8] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#JX8] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#JX8] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#JX8] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#JX8] [test-4.lox] [0m("world" + "baz") + ("foo" + "hello")
[33m[tester::#JX8] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mworldbazfoohello
[33m[tester::#JX8] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#JX8] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#JX8] [0m[92mTest passed.[0m

[33m[tester::#JY2] [0m[94mRunning tests for Stage #JY2 (Evaluating Expressions - Arithmetic Operators (2/2))[0m
[33m[tester::#JY2] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#JY2] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#JY2] [test-1.lox] [0m30 - 66
[33m[tester::#JY2] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m-36
[33m[tester::#JY2] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#JY2] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#JY2] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#JY2] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#JY2] [test-2.lox] [0m55 + 19 - 42
[33m[tester::#JY2] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m32
[33m[tester::#JY2] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#JY2] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#JY2] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#JY2] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#JY2] [test-3.lox] [0m91 + 12 - (-(95 - 37))
[33m[tester::#JY2] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m161
[33m[tester::#JY2] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#JY2] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#JY2] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#JY2] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#JY2] [test-4.lox] [0m(-11 + 11) * (97 * 26) / (1 + 4)
[33m[tester::#JY2] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m0
[33m[tester::#JY2] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#JY2] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#JY2] [0m[92mTest passed.[0m

[33m[tester::#BP3] [0m[94mRunning tests for Stage #BP3 (Evaluating Expressions - Arithmetic Operators (1/2))[0m
[33m[tester::#BP3] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#BP3] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#BP3] [test-1.lox] [0m66 * 50
[33m[tester::#BP3] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m3300
[33m[tester::#BP3] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#BP3] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#BP3] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#BP3] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#BP3] [test-2.lox] [0m92 / 5
[33m[tester::#BP3] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m18.4
[33m[tester::#BP3] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#BP3] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#BP3] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#BP3] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#BP3] [test-3.lox] [0m7 * 2 / 7 / 1
[33m[tester::#BP3] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m2
[33m[tester::#BP3] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#BP3] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#BP3] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#BP3] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#BP3] [test-4.lox] [0m(18 * 2 / (3 * 6))
[33m[tester::#BP3] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m2
[33m[tester::#BP3] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#BP3] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#BP3] [0m[92mTest passed.[0m

[33m[tester::#DC1] [0m[94mRunning tests for Stage #DC1 (Evaluating Expressions - Unary Operators: Negation & Not)[0m
[33m[tester::#DC1] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#DC1] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DC1] [test-1.lox] [0m-61
[33m[tester::#DC1] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m-61
[33m[tester::#DC1] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#DC1] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#DC1] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#DC1] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DC1] [test-2.lox] [0m!true
[33m[tester::#DC1] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mfalse
[33m[tester::#DC1] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#DC1] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#DC1] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#DC1] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DC1] [test-3.lox] [0m!nil
[33m[tester::#DC1] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#DC1] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#DC1] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#DC1] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#DC1] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DC1] [test-4.lox] [0m(!!13)
[33m[tester::#DC1] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#DC1] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#DC1] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#DC1] [0m[92mTest passed.[0m

[33m[tester::#OQ9] [0m[94mRunning tests for Stage #OQ9 (Evaluating Expressions - Parentheses)[0m
[33m[tester::#OQ9] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#OQ9] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OQ9] [test-1.lox] [0m(true)
[33m[tester::#OQ9] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#OQ9] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#OQ9] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OQ9] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#OQ9] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OQ9] [test-2.lox] [0m(74)
[33m[tester::#OQ9] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m74
[33m[tester::#OQ9] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#OQ9] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OQ9] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#OQ9] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OQ9] [test-3.lox] [0m("world baz")
[33m[tester::#OQ9] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mworld baz
[33m[tester::#OQ9] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#OQ9] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OQ9] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#OQ9] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OQ9] [test-4.lox] [0m((true))
[33m[tester::#OQ9] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#OQ9] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#OQ9] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OQ9] [0m[92mTest passed.[0m

[33m[tester::#LV1] [0m[94mRunning tests for Stage #LV1 (Evaluating Expressions - Literals: Strings & Numbers)[0m
[33m[tester::#LV1] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#LV1] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#LV1] [test-1.lox] [0m44
[33m[tester::#LV1] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m44
[33m[tester::#LV1] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#LV1] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#LV1] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#LV1] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#LV1] [test-2.lox] [0m34.93
[33m[tester::#LV1] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m34.93
[33m[tester::#LV1] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#LV1] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#LV1] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#LV1] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#LV1] [test-3.lox] [0m"hello world"
[33m[tester::#LV1] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mhello world
[33m[tester::#LV1] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#LV1] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#LV1] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#LV1] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#LV1] [test-4.lox] [0m"22"
[33m[tester::#LV1] [test-4] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m22
[33m[tester::#LV1] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#LV1] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#LV1] [0m[92mTest passed.[0m

[33m[tester::#IZ6] [0m[94mRunning tests for Stage #IZ6 (Evaluating Expressions - Literals: Booleans & Nil)[0m
[33m[tester::#IZ6] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#IZ6] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#IZ6] [test-1.lox] [0mtrue
[33m[tester::#IZ6] [test-1] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#IZ6] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#IZ6] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#IZ6] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#IZ6] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#IZ6] [test-2.lox] [0mfalse
[33m[tester::#IZ6] [test-2] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mfalse
[33m[tester::#IZ6] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#IZ6] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#IZ6] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#IZ6] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#IZ6] [test-3.lox] [0mnil
[33m[tester::#IZ6] [test-3] [0m[94m$ ./your_program.sh evaluate test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mnil
[33m[tester::#IZ6] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#IZ6] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#IZ6] [0m[92mTest passed.[0m

[33m[tester::#WZ8] [0m[94mRunning tests for Stage #WZ8 (Parsing Expressions - Syntactic errors)[0m
[33m[tester::#WZ8] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#WZ8] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#WZ8] [test-1.lox] [0m"world
[33m[tester::#WZ8] [test-1] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[tester::#WZ8] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#WZ8] [test-1] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#WZ8] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#WZ8] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#WZ8] [test-2.lox] [0m(foo
[33m[tester::#WZ8] [test-2] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mParsing error at line 1: Invalid index 2, max_idx is 1.
[33m[tester::#WZ8] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#WZ8] [test-2] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#WZ8] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#WZ8] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#WZ8] [test-3.lox] [0m(75 +)
[33m[tester::#WZ8] [test-3] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mFailed to parse token ) at line 1.
[33m[tester::#WZ8] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#WZ8] [test-3] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#WZ8] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#WZ8] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#WZ8] [test-4.lox] [0m+
[33m[tester::#WZ8] [test-4] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mFailed to parse token + at line 1.
[33m[tester::#WZ8] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#WZ8] [test-4] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#WZ8] [0m[92mTest passed.[0m

[33m[tester::#HT8] [0m[94mRunning tests for Stage #HT8 (Parsing Expressions - Equality operators)[0m
[33m[tester::#HT8] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#HT8] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#HT8] [test-1.lox] [0m"world"!="baz"
[33m[tester::#HT8] [test-1] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(!= world baz)
[33m[tester::#HT8] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#HT8] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#HT8] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#HT8] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#HT8] [test-2.lox] [0m"foo" == "foo"
[33m[tester::#HT8] [test-2] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(== foo foo)
[33m[tester::#HT8] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#HT8] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#HT8] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#HT8] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#HT8] [test-3.lox] [0m26 == 52
[33m[tester::#HT8] [test-3] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(== 26.0 52.0)
[33m[tester::#HT8] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#HT8] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#HT8] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#HT8] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#HT8] [test-4.lox] [0m(42 != 43) == ((-45 + 24) >= (59 * 46))
[33m[tester::#HT8] [test-4] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(== (group (!= 42.0 43.0)) (group (>= (group (+ (- 45.0) 24.0)) (group (* 59.0 46.0)))))
[33m[tester::#HT8] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#HT8] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#HT8] [0m[92mTest passed.[0m

[33m[tester::#UH4] [0m[94mRunning tests for Stage #UH4 (Parsing Expressions - Comparison operators)[0m
[33m[tester::#UH4] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#UH4] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#UH4] [test-1.lox] [0m73 > 13
[33m[tester::#UH4] [test-1] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(> 73.0 13.0)
[33m[tester::#UH4] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#UH4] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#UH4] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#UH4] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#UH4] [test-2.lox] [0m60 <= 133
[33m[tester::#UH4] [test-2] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(<= 60.0 133.0)
[33m[tester::#UH4] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#UH4] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#UH4] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#UH4] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#UH4] [test-3.lox] [0m73 < 133 < 193
[33m[tester::#UH4] [test-3] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(< (< 73.0 133.0) 193.0)
[33m[tester::#UH4] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#UH4] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#UH4] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#UH4] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#UH4] [test-4.lox] [0m(98 - 15) >= -(33 / 71 + 72)
[33m[tester::#UH4] [test-4] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(>= (group (- 98.0 15.0)) (- (group (+ (/ 33.0 71.0) 72.0))))
[33m[tester::#UH4] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#UH4] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#UH4] [0m[92mTest passed.[0m

[33m[tester::#YF2] [0m[94mRunning tests for Stage #YF2 (Parsing Expressions - Arithmetic operators (2/2))[0m
[33m[tester::#YF2] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#YF2] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YF2] [test-1.lox] [0m"hello" + "world"
[33m[tester::#YF2] [test-1] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(+ hello world)
[33m[tester::#YF2] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YF2] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YF2] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#YF2] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YF2] [test-2.lox] [0m23 - 22 * 45 - 63
[33m[tester::#YF2] [test-2] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(- (- 23.0 (* 22.0 45.0)) 63.0)
[33m[tester::#YF2] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YF2] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YF2] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#YF2] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YF2] [test-3.lox] [0m72 + 33 - 17 / 58
[33m[tester::#YF2] [test-3] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(- (+ 72.0 33.0) (/ 17.0 58.0))
[33m[tester::#YF2] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YF2] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YF2] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#YF2] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YF2] [test-4.lox] [0m(-46 + 64) * (91 * 76) / (55 + 32)
[33m[tester::#YF2] [test-4] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(/ (* (group (+ (- 46.0) 64.0)) (group (* 91.0 76.0))) (group (+ 55.0 32.0)))
[33m[tester::#YF2] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YF2] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YF2] [0m[92mTest passed.[0m

[33m[tester::#WA9] [0m[94mRunning tests for Stage #WA9 (Parsing Expressions - Arithmetic operators (1/2))[0m
[33m[tester::#WA9] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#WA9] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#WA9] [test-1.lox] [0m57 * 35 / 25
[33m[tester::#WA9] [test-1] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(/ (* 57.0 35.0) 25.0)
[33m[tester::#WA9] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#WA9] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#WA9] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#WA9] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#WA9] [test-2.lox] [0m30 / 60 / 20
[33m[tester::#WA9] [test-2] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(/ (/ 30.0 60.0) 20.0)
[33m[tester::#WA9] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#WA9] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#WA9] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#WA9] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#WA9] [test-3.lox] [0m21 * 21 * 97 / 33
[33m[tester::#WA9] [test-3] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(/ (* (* 21.0 21.0) 97.0) 33.0)
[33m[tester::#WA9] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#WA9] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#WA9] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#WA9] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#WA9] [test-4.lox] [0m(83 * -66 / (38 * 38))
[33m[tester::#WA9] [test-4] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(group (/ (* 83.0 (- 66.0)) (group (* 38.0 38.0))))
[33m[tester::#WA9] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#WA9] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#WA9] [0m[92mTest passed.[0m

[33m[tester::#MQ1] [0m[94mRunning tests for Stage #MQ1 (Parsing Expressions - Unary Operators)[0m
[33m[tester::#MQ1] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#MQ1] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#MQ1] [test-1.lox] [0m!true
[33m[tester::#MQ1] [test-1] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(! true)
[33m[tester::#MQ1] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#MQ1] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#MQ1] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#MQ1] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#MQ1] [test-2.lox] [0m-33
[33m[tester::#MQ1] [test-2] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(- 33.0)
[33m[tester::#MQ1] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#MQ1] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#MQ1] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#MQ1] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#MQ1] [test-3.lox] [0m!!false
[33m[tester::#MQ1] [test-3] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(! (! false))
[33m[tester::#MQ1] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#MQ1] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#MQ1] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#MQ1] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#MQ1] [test-4.lox] [0m(!!(true))
[33m[tester::#MQ1] [test-4] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(group (! (! (group true))))
[33m[tester::#MQ1] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#MQ1] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#MQ1] [0m[92mTest passed.[0m

[33m[tester::#XE6] [0m[94mRunning tests for Stage #XE6 (Parsing Expressions - Parentheses)[0m
[33m[tester::#XE6] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#XE6] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XE6] [test-1.lox] [0m("foo")
[33m[tester::#XE6] [test-1] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(group foo)
[33m[tester::#XE6] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#XE6] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XE6] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#XE6] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XE6] [test-2.lox] [0m((true))
[33m[tester::#XE6] [test-2] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(group (group true))
[33m[tester::#XE6] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#XE6] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XE6] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#XE6] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XE6] [test-3.lox] [0m(nil)
[33m[tester::#XE6] [test-3] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(group nil)
[33m[tester::#XE6] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#XE6] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XE6] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#XE6] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XE6] [test-4.lox] [0m(26.37)
[33m[tester::#XE6] [test-4] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m(group 26.37)
[33m[tester::#XE6] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#XE6] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XE6] [0m[92mTest passed.[0m

[33m[tester::#TH5] [0m[94mRunning tests for Stage #TH5 (Parsing Expressions - String literals)[0m
[33m[tester::#TH5] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#TH5] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#TH5] [test-1.lox] [0m"baz quz"
[33m[tester::#TH5] [test-1] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mbaz quz
[33m[tester::#TH5] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#TH5] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#TH5] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#TH5] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#TH5] [test-2.lox] [0m"'baz'"
[33m[tester::#TH5] [test-2] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m'baz'
[33m[tester::#TH5] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#TH5] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#TH5] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#TH5] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#TH5] [test-3.lox] [0m"// bar"
[33m[tester::#TH5] [test-3] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m// bar
[33m[tester::#TH5] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#TH5] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#TH5] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#TH5] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#TH5] [test-4.lox] [0m"89"
[33m[tester::#TH5] [test-4] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m89
[33m[tester::#TH5] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#TH5] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#TH5] [0m[92mTest passed.[0m

[33m[tester::#RA8] [0m[94mRunning tests for Stage #RA8 (Parsing Expressions - Number literals)[0m
[33m[tester::#RA8] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#RA8] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#RA8] [test-1.lox] [0m49
[33m[tester::#RA8] [test-1] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m49.0
[33m[tester::#RA8] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#RA8] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#RA8] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#RA8] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#RA8] [test-2.lox] [0m0.0
[33m[tester::#RA8] [test-2] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m0.0
[33m[tester::#RA8] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#RA8] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#RA8] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#RA8] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#RA8] [test-3.lox] [0m90.11
[33m[tester::#RA8] [test-3] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m90.11
[33m[tester::#RA8] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#RA8] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#RA8] [0m[92mTest passed.[0m

[33m[tester::#SC2] [0m[94mRunning tests for Stage #SC2 (Parsing Expressions - Booleans & Nil)[0m
[33m[tester::#SC2] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#SC2] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#SC2] [test-1.lox] [0mtrue
[33m[tester::#SC2] [test-1] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mtrue
[33m[tester::#SC2] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#SC2] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#SC2] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#SC2] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#SC2] [test-2.lox] [0mfalse
[33m[tester::#SC2] [test-2] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mfalse
[33m[tester::#SC2] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#SC2] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#SC2] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#SC2] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#SC2] [test-3.lox] [0mnil
[33m[tester::#SC2] [test-3] [0m[94m$ ./your_program.sh parse test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mnil
[33m[tester::#SC2] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#SC2] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#SC2] [0m[92mTest passed.[0m

[33m[tester::#PQ5] [0m[94mRunning tests for Stage #PQ5 (Scanning: Reserved words)[0m
[33m[tester::#PQ5] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#PQ5] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PQ5] [test-1.lox] [0msuper
[33m[tester::#PQ5] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mSUPER super null
[33m[your_program] [0mEOF  null
[33m[tester::#PQ5] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#PQ5] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#PQ5] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#PQ5] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PQ5] [test-2.lox] [0melse AND THIS FOR TRUE PRINT ELSE while NIL fun CLASS super RETURN FALSE IF VAR if false print or class nil var true WHILE and for FUN return SUPER OR this
[33m[tester::#PQ5] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mELSE else null
[33m[your_program] [0mIDENTIFIER AND null
[33m[your_program] [0mIDENTIFIER THIS null
[33m[your_program] [0mIDENTIFIER FOR null
[33m[your_program] [0mIDENTIFIER TRUE null
[33m[your_program] [0mIDENTIFIER PRINT null
[33m[your_program] [0mIDENTIFIER ELSE null
[33m[your_program] [0mWHILE while null
[33m[your_program] [0mIDENTIFIER NIL null
[33m[your_program] [0mFUN fun null
[33m[your_program] [0mIDENTIFIER CLASS null
[33m[your_program] [0mSUPER super null
[33m[your_program] [0mIDENTIFIER RETURN null
[33m[your_program] [0mIDENTIFIER FALSE null
[33m[your_program] [0mIDENTIFIER IF null
[33m[your_program] [0mIDENTIFIER VAR null
[33m[your_program] [0mIF if null
[33m[your_program] [0mFALSE false null
[33m[your_program] [0mPRINT print null
[33m[your_program] [0mOR or null
[33m[your_program] [0mCLASS class null
[33m[your_program] [0mNIL nil null
[33m[your_program] [0mVAR var null
[33m[your_program] [0mTRUE true null
[33m[your_program] [0mIDENTIFIER WHILE null
[33m[your_program] [0mAND and null
[33m[your_program] [0mFOR for null
[33m[your_program] [0mIDENTIFIER FUN null
[33m[your_program] [0mRETURN return null
[33m[your_program] [0mIDENTIFIER SUPER null
[33m[your_program] [0mIDENTIFIER OR null
[33m[your_program] [0mTHIS this null
[33m[your_program] [0mEOF  null
[33m[tester::#PQ5] [test-2] [0m[92mâœ“ 33 line(s) match on stdout[0m
[33m[tester::#PQ5] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#PQ5] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#PQ5] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PQ5] [test-3.lox] [0mvar greeting = "Hello"
[33m[tester::#PQ5] [test-3.lox] [0mif (greeting == "Hello") {
[33m[tester::#PQ5] [test-3.lox] [0m    return true
[33m[tester::#PQ5] [test-3.lox] [0m} else {
[33m[tester::#PQ5] [test-3.lox] [0m    return false
[33m[tester::#PQ5] [test-3.lox] [0m}
[33m[tester::#PQ5] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mVAR var null
[33m[your_program] [0mIDENTIFIER greeting null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mSTRING "Hello" Hello
[33m[your_program] [0mIF if null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mIDENTIFIER greeting null
[33m[your_program] [0mEQUAL_EQUAL == null
[33m[your_program] [0mSTRING "Hello" Hello
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mRETURN return null
[33m[your_program] [0mTRUE true null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mELSE else null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mRETURN return null
[33m[your_program] [0mFALSE false null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mEOF  null
[33m[tester::#PQ5] [test-3] [0m[92mâœ“ 20 line(s) match on stdout[0m
[33m[tester::#PQ5] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#PQ5] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#PQ5] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PQ5] [test-4.lox] [0mvar result = (a + b) > 7 or "Success" != "Failure" or x >= 5
[33m[tester::#PQ5] [test-4.lox] [0mwhile (result) {
[33m[tester::#PQ5] [test-4.lox] [0m    var counter = 0
[33m[tester::#PQ5] [test-4.lox] [0m    counter = counter + 1
[33m[tester::#PQ5] [test-4.lox] [0m    if (counter == 10) {
[33m[tester::#PQ5] [test-4.lox] [0m        return nil
[33m[tester::#PQ5] [test-4.lox] [0m    }
[33m[tester::#PQ5] [test-4.lox] [0m}
[33m[tester::#PQ5] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mVAR var null
[33m[your_program] [0mIDENTIFIER result null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mIDENTIFIER a null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mIDENTIFIER b null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mGREATER > null
[33m[your_program] [0mNUMBER 7 7.0
[33m[your_program] [0mOR or null
[33m[your_program] [0mSTRING "Success" Success
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mSTRING "Failure" Failure
[33m[your_program] [0mOR or null
[33m[your_program] [0mIDENTIFIER x null
[33m[your_program] [0mGREATER_EQUAL >= null
[33m[your_program] [0mNUMBER 5 5.0
[33m[your_program] [0mWHILE while null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mIDENTIFIER result null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mVAR var null
[33m[your_program] [0mIDENTIFIER counter null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mNUMBER 0 0.0
[33m[your_program] [0mIDENTIFIER counter null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mIDENTIFIER counter null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mNUMBER 1 1.0
[33m[your_program] [0mIF if null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mIDENTIFIER counter null
[33m[your_program] [0mEQUAL_EQUAL == null
[33m[your_program] [0mNUMBER 10 10.0
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mRETURN return null
[33m[your_program] [0mNIL nil null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mEOF  null
[33m[tester::#PQ5] [test-4] [0m[92mâœ“ 44 line(s) match on stdout[0m
[33m[tester::#PQ5] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#PQ5] [0m[92mTest passed.[0m

[33m[tester::#EY7] [0m[94mRunning tests for Stage #EY7 (Scanning: Identifiers)[0m
[33m[tester::#EY7] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#EY7] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EY7] [test-1.lox] [0mbaz bar
[33m[tester::#EY7] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mIDENTIFIER baz null
[33m[your_program] [0mIDENTIFIER bar null
[33m[your_program] [0mEOF  null
[33m[tester::#EY7] [test-1] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#EY7] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#EY7] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#EY7] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EY7] [test-2.lox] [0m_123_hello 6ar foo bar 6az
[33m[tester::#EY7] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mIDENTIFIER _123_hello null
[33m[your_program] [0mNUMBER 6 6.0
[33m[your_program] [0mIDENTIFIER ar null
[33m[your_program] [0mIDENTIFIER foo null
[33m[your_program] [0mIDENTIFIER bar null
[33m[your_program] [0mNUMBER 6 6.0
[33m[your_program] [0mIDENTIFIER az null
[33m[your_program] [0mEOF  null
[33m[tester::#EY7] [test-2] [0m[92mâœ“ 8 line(s) match on stdout[0m
[33m[tester::#EY7] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#EY7] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#EY7] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EY7] [test-3.lox] [0mmessage = "Hello, World!"
[33m[tester::#EY7] [test-3.lox] [0mnumber = 123
[33m[tester::#EY7] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mIDENTIFIER message null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mSTRING "Hello, World!" Hello, World!
[33m[your_program] [0mIDENTIFIER number null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mNUMBER 123 123.0
[33m[your_program] [0mEOF  null
[33m[tester::#EY7] [test-3] [0m[92mâœ“ 7 line(s) match on stdout[0m
[33m[tester::#EY7] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#EY7] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#EY7] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EY7] [test-4.lox] [0m{
[33m[tester::#EY7] [test-4.lox] [0m// This is a complex test case
[33m[tester::#EY7] [test-4.lox] [0mstr1 = "Test"
[33m[tester::#EY7] [test-4.lox] [0mstr2 = "Case"
[33m[tester::#EY7] [test-4.lox] [0mnum1 = 100
[33m[tester::#EY7] [test-4.lox] [0mnum2 = 200.00
[33m[tester::#EY7] [test-4.lox] [0mresult = (str1 == str2) != ((num1 + num2) >= 300)
[33m[tester::#EY7] [test-4.lox] [0m}
[33m[tester::#EY7] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mIDENTIFIER str1 null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mSTRING "Test" Test
[33m[your_program] [0mIDENTIFIER str2 null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mSTRING "Case" Case
[33m[your_program] [0mIDENTIFIER num1 null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mNUMBER 100 100.0
[33m[your_program] [0mIDENTIFIER num2 null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mNUMBER 200.00 200.0
[33m[your_program] [0mIDENTIFIER result null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mIDENTIFIER str1 null
[33m[your_program] [0mEQUAL_EQUAL == null
[33m[your_program] [0mIDENTIFIER str2 null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mIDENTIFIER num1 null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mIDENTIFIER num2 null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mGREATER_EQUAL >= null
[33m[your_program] [0mNUMBER 300 300.0
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mEOF  null
[33m[tester::#EY7] [test-4] [0m[92mâœ“ 32 line(s) match on stdout[0m
[33m[tester::#EY7] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#EY7] [0m[92mTest passed.[0m

[33m[tester::#KJ0] [0m[94mRunning tests for Stage #KJ0 (Scanning: Number literals)[0m
[33m[tester::#KJ0] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#KJ0] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#KJ0] [test-1.lox] [0m35
[33m[tester::#KJ0] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mNUMBER 35 35.0
[33m[your_program] [0mEOF  null
[33m[tester::#KJ0] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#KJ0] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#KJ0] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#KJ0] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#KJ0] [test-2.lox] [0m4266.5161
[33m[tester::#KJ0] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mNUMBER 4266.5161 4266.5161
[33m[your_program] [0mEOF  null
[33m[tester::#KJ0] [test-2] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#KJ0] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#KJ0] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#KJ0] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#KJ0] [test-3.lox] [0m90.0000
[33m[tester::#KJ0] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mNUMBER 90.0000 90.0
[33m[your_program] [0mEOF  null
[33m[tester::#KJ0] [test-3] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#KJ0] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#KJ0] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#KJ0] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#KJ0] [test-4.lox] [0m(46+93) > 23 != ("Success" != "Failure") != (26 >= 93)
[33m[tester::#KJ0] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mNUMBER 46 46.0
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mNUMBER 93 93.0
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mGREATER > null
[33m[your_program] [0mNUMBER 23 23.0
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mSTRING "Success" Success
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mSTRING "Failure" Failure
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mNUMBER 26 26.0
[33m[your_program] [0mGREATER_EQUAL >= null
[33m[your_program] [0mNUMBER 93 93.0
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[tester::#KJ0] [test-4] [0m[92mâœ“ 20 line(s) match on stdout[0m
[33m[tester::#KJ0] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#KJ0] [0m[92mTest passed.[0m

[33m[tester::#UE7] [0m[94mRunning tests for Stage #UE7 (Scanning: String literals)[0m
[33m[tester::#UE7] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#UE7] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#UE7] [test-1.lox] [0m"hello"
[33m[tester::#UE7] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mSTRING "hello" hello
[33m[your_program] [0mEOF  null
[33m[tester::#UE7] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#UE7] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#UE7] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#UE7] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#UE7] [test-2.lox] [0m"bar" "unterminated
[33m[tester::#UE7] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mSTRING "bar" bar
[33m[your_program] [0mEOF  null
[33m[your_program] [0m[line 1] Error: Unterminated string.
[33m[tester::#UE7] [test-2] [0m[92mâœ“ 1 line(s) match on stderr[0m
[33m[tester::#UE7] [test-2] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#UE7] [test-2] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#UE7] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#UE7] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#UE7] [test-3.lox] [0m"foo <|TAB|>bar 123 // hello world!"
[33m[tester::#UE7] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mSTRING "foo 	bar 123 // hello world!" foo 	bar 123 // hello world!
[33m[your_program] [0mEOF  null
[33m[tester::#UE7] [test-3] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#UE7] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#UE7] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#UE7] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#UE7] [test-4.lox] [0m("bar"+"baz") != "other_string"
[33m[tester::#UE7] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mSTRING "bar" bar
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mSTRING "baz" baz
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mSTRING "other_string" other_string
[33m[your_program] [0mEOF  null
[33m[tester::#UE7] [test-4] [0m[92mâœ“ 8 line(s) match on stdout[0m
[33m[tester::#UE7] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#UE7] [0m[92mTest passed.[0m

[33m[tester::#TZ7] [0m[94mRunning tests for Stage #TZ7 (Scanning: Multi-line errors)[0m
[33m[tester::#TZ7] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#TZ7] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#TZ7] [test-1.lox] [0m()<|SPACE|><|TAB|>@
[33m[tester::#TZ7] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[your_program] [0m[line 2] Error: Unexpected character: @
[33m[tester::#TZ7] [test-1] [0m[92mâœ“ 1 line(s) match on stderr[0m
[33m[tester::#TZ7] [test-1] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#TZ7] [test-1] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#TZ7] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#TZ7] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#TZ7] [test-2.lox] [0m%# $
[33m[tester::#TZ7] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m[line 1] Error: Unexpected character: %
[33m[your_program] [0m[line 1] Error: Unexpected character: #
[33m[your_program] [0m[line 1] Error: Unexpected character: $
[33m[your_program] [0mEOF  null
[33m[tester::#TZ7] [test-2] [0m[92mâœ“ 3 line(s) match on stderr[0m
[33m[tester::#TZ7] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#TZ7] [test-2] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#TZ7] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#TZ7] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#TZ7] [test-3.lox] [0m()  #<|TAB|>{}
[33m[tester::#TZ7] [test-3.lox] [0m@
[33m[tester::#TZ7] [test-3.lox] [0m$
[33m[tester::#TZ7] [test-3.lox] [0m+++
[33m[tester::#TZ7] [test-3.lox] [0m// Let's Go!
[33m[tester::#TZ7] [test-3.lox] [0m+++
[33m[tester::#TZ7] [test-3.lox] [0m#
[33m[tester::#TZ7] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mEOF  null
[33m[your_program] [0m[line 1] Error: Unexpected character: #
[33m[your_program] [0m[line 2] Error: Unexpected character: @
[33m[your_program] [0m[line 3] Error: Unexpected character: $
[33m[your_program] [0m[line 7] Error: Unexpected character: #
[33m[tester::#TZ7] [test-3] [0m[92mâœ“ 4 line(s) match on stderr[0m
[33m[tester::#TZ7] [test-3] [0m[92mâœ“ 11 line(s) match on stdout[0m
[33m[tester::#TZ7] [test-3] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#TZ7] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#TZ7] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#TZ7] [test-4.lox] [0m({* #})
[33m[tester::#TZ7] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mSTAR * null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[your_program] [0m[line 1] Error: Unexpected character: #
[33m[tester::#TZ7] [test-4] [0m[92mâœ“ 1 line(s) match on stderr[0m
[33m[tester::#TZ7] [test-4] [0m[92mâœ“ 6 line(s) match on stdout[0m
[33m[tester::#TZ7] [test-4] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#TZ7] [0m[92mTest passed.[0m

[33m[tester::#ER2] [0m[94mRunning tests for Stage #ER2 (Scanning: Whitespace)[0m
[33m[tester::#ER2] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#ER2] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ER2] [test-1.lox] [0m<|SPACE|>
[33m[tester::#ER2] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mEOF  null
[33m[tester::#ER2] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#ER2] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ER2] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#ER2] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ER2] [test-2.lox] [0m <|TAB|>
[33m[tester::#ER2] [test-2.lox] [0m<|SPACE|>
[33m[tester::#ER2] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mEOF  null
[33m[tester::#ER2] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#ER2] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ER2] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#ER2] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ER2] [test-3.lox] [0m{<|TAB|>
[33m[tester::#ER2] [test-3.lox] [0m}
[33m[tester::#ER2] [test-3.lox] [0m((,<|TAB|>+.;))
[33m[tester::#ER2] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mCOMMA , null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mDOT . null
[33m[your_program] [0mSEMICOLON ; null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[tester::#ER2] [test-3] [0m[92mâœ“ 11 line(s) match on stdout[0m
[33m[tester::#ER2] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ER2] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#ER2] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ER2] [test-4.lox] [0m{
[33m[tester::#ER2] [test-4.lox] [0m<|TAB|> <|TAB|>
[33m[tester::#ER2] [test-4.lox] [0m}
[33m[tester::#ER2] [test-4.lox] [0m(( .>=+<=))
[33m[tester::#ER2] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mDOT . null
[33m[your_program] [0mGREATER_EQUAL >= null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mLESS_EQUAL <= null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[tester::#ER2] [test-4] [0m[92mâœ“ 11 line(s) match on stdout[0m
[33m[tester::#ER2] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ER2] [0m[92mTest passed.[0m

[33m[tester::#ML2] [0m[94mRunning tests for Stage #ML2 (Scanning: Division operator & comments)[0m
[33m[tester::#ML2] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#ML2] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ML2] [test-1.lox] [0m//Comment
[33m[tester::#ML2] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mEOF  null
[33m[your_program] [0mLogs from your program will appear here!
[33m[tester::#ML2] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#ML2] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ML2] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#ML2] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ML2] [test-2.lox] [0m(///Unicode:Â£Â§á¯½â˜ºâ™£)
[33m[tester::#ML2] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mEOF  null
[33m[tester::#ML2] [test-2] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#ML2] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ML2] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#ML2] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ML2] [test-3.lox] [0m/
[33m[tester::#ML2] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mSLASH / null
[33m[your_program] [0mEOF  null
[33m[tester::#ML2] [test-3] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#ML2] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ML2] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#ML2] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ML2] [test-4.lox] [0m({(!<<=)})//Comment
[33m[tester::#ML2] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mBANG ! null
[33m[your_program] [0mLESS < null
[33m[your_program] [0mLESS_EQUAL <= null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[tester::#ML2] [test-4] [0m[92mâœ“ 10 line(s) match on stdout[0m
[33m[tester::#ML2] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ML2] [0m[92mTest passed.[0m

[33m[tester::#ET2] [0m[94mRunning tests for Stage #ET2 (Scanning: Relational operators)[0m
[33m[tester::#ET2] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#ET2] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ET2] [test-1.lox] [0m>=
[33m[tester::#ET2] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mGREATER_EQUAL >= null
[33m[your_program] [0mEOF  null
[33m[tester::#ET2] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#ET2] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ET2] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#ET2] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ET2] [test-2.lox] [0m<<<=>>>=
[33m[tester::#ET2] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLESS < null
[33m[your_program] [0mLESS < null
[33m[your_program] [0mLESS_EQUAL <= null
[33m[your_program] [0mGREATER > null
[33m[your_program] [0mGREATER > null
[33m[your_program] [0mGREATER_EQUAL >= null
[33m[your_program] [0mEOF  null
[33m[tester::#ET2] [test-2] [0m[92mâœ“ 7 line(s) match on stdout[0m
[33m[tester::#ET2] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ET2] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#ET2] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ET2] [test-3.lox] [0m<>=<>>=
[33m[tester::#ET2] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLESS < null
[33m[your_program] [0mGREATER_EQUAL >= null
[33m[your_program] [0mLESS < null
[33m[your_program] [0mGREATER > null
[33m[your_program] [0mGREATER_EQUAL >= null
[33m[your_program] [0mEOF  null
[33m[tester::#ET2] [test-3] [0m[92mâœ“ 6 line(s) match on stdout[0m
[33m[tester::#ET2] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ET2] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#ET2] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#ET2] [test-4.lox] [0m(){>=!<}
[33m[tester::#ET2] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mGREATER_EQUAL >= null
[33m[your_program] [0mBANG ! null
[33m[your_program] [0mLESS < null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mEOF  null
[33m[tester::#ET2] [test-4] [0m[92mâœ“ 8 line(s) match on stdout[0m
[33m[tester::#ET2] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#ET2] [0m[92mTest passed.[0m

[33m[tester::#BU3] [0m[94mRunning tests for Stage #BU3 (Scanning: Negation & inequality operators)[0m
[33m[tester::#BU3] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#BU3] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#BU3] [test-1.lox] [0m!=
[33m[tester::#BU3] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mEOF  null
[33m[tester::#BU3] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#BU3] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#BU3] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#BU3] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#BU3] [test-2.lox] [0m!!===
[33m[tester::#BU3] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mBANG ! null
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mEQUAL_EQUAL == null
[33m[your_program] [0mEOF  null
[33m[tester::#BU3] [test-2] [0m[92mâœ“ 4 line(s) match on stdout[0m
[33m[tester::#BU3] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#BU3] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#BU3] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#BU3] [test-3.lox] [0m!{!}(!===)=
[33m[tester::#BU3] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mBANG ! null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mBANG ! null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mEQUAL_EQUAL == null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mEOF  null
[33m[tester::#BU3] [test-3] [0m[92mâœ“ 10 line(s) match on stdout[0m
[33m[tester::#BU3] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#BU3] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#BU3] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#BU3] [test-4.lox] [0m{($!=%!=)}
[33m[tester::#BU3] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mBANG_EQUAL != null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mEOF  null
[33m[your_program] [0m[line 1] Error: Unexpected character: $
[33m[your_program] [0m[line 1] Error: Unexpected character: %
[33m[tester::#BU3] [test-4] [0m[92mâœ“ 2 line(s) match on stderr[0m
[33m[tester::#BU3] [test-4] [0m[92mâœ“ 7 line(s) match on stdout[0m
[33m[tester::#BU3] [test-4] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#BU3] [0m[92mTest passed.[0m

[33m[tester::#MP7] [0m[94mRunning tests for Stage #MP7 (Scanning: Assignment & equality Operators)[0m
[33m[tester::#MP7] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#MP7] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#MP7] [test-1.lox] [0m=
[33m[tester::#MP7] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mEOF  null
[33m[tester::#MP7] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#MP7] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#MP7] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#MP7] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#MP7] [test-2.lox] [0m==
[33m[tester::#MP7] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mEQUAL_EQUAL == null
[33m[your_program] [0mEOF  null
[33m[tester::#MP7] [test-2] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#MP7] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#MP7] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#MP7] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#MP7] [test-3.lox] [0m({=}){==}
[33m[tester::#MP7] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mEQUAL_EQUAL == null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mEOF  null
[33m[tester::#MP7] [test-3] [0m[92mâœ“ 9 line(s) match on stdout[0m
[33m[tester::#MP7] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#MP7] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#MP7] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#MP7] [test-4.lox] [0m(($=#%==))
[33m[tester::#MP7] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mEQUAL = null
[33m[your_program] [0mEQUAL_EQUAL == null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[your_program] [0m[line 1] Error: Unexpected character: $
[33m[your_program] [0m[line 1] Error: Unexpected character: #
[33m[your_program] [0m[line 1] Error: Unexpected character: %
[33m[tester::#MP7] [test-4] [0m[92mâœ“ 3 line(s) match on stderr[0m
[33m[tester::#MP7] [test-4] [0m[92mâœ“ 7 line(s) match on stdout[0m
[33m[tester::#MP7] [test-4] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#MP7] [0m[92mTest passed.[0m

[33m[tester::#EA6] [0m[94mRunning tests for Stage #EA6 (Scanning: Lexical errors)[0m
[33m[tester::#EA6] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#EA6] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EA6] [test-1.lox] [0m@
[33m[tester::#EA6] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0m[line 1] Error: Unexpected character: @
[33m[your_program] [0mEOF  null
[33m[tester::#EA6] [test-1] [0m[92mâœ“ 1 line(s) match on stderr[0m
[33m[tester::#EA6] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#EA6] [test-1] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EA6] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#EA6] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EA6] [test-2.lox] [0m,.$(#
[33m[tester::#EA6] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mCOMMA , null
[33m[your_program] [0mDOT . null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mEOF  null
[33m[your_program] [0m[line 1] Error: Unexpected character: $
[33m[your_program] [0m[line 1] Error: Unexpected character: #
[33m[tester::#EA6] [test-2] [0m[92mâœ“ 2 line(s) match on stderr[0m
[33m[tester::#EA6] [test-2] [0m[92mâœ“ 4 line(s) match on stdout[0m
[33m[tester::#EA6] [test-2] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EA6] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#EA6] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EA6] [test-3.lox] [0m@$$%%
[33m[tester::#EA6] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mEOF  null
[33m[your_program] [0m[line 1] Error: Unexpected character: @
[33m[your_program] [0m[line 1] Error: Unexpected character: $
[33m[your_program] [0m[line 1] Error: Unexpected character: $
[33m[your_program] [0m[line 1] Error: Unexpected character: %
[33m[your_program] [0m[line 1] Error: Unexpected character: %
[33m[tester::#EA6] [test-3] [0m[92mâœ“ 5 line(s) match on stderr[0m
[33m[tester::#EA6] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#EA6] [test-3] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EA6] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#EA6] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EA6] [test-4.lox] [0m{(%.;$#+-)}
[33m[tester::#EA6] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mDOT . null
[33m[your_program] [0mSEMICOLON ; null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mMINUS - null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mEOF  null
[33m[your_program] [0m[line 1] Error: Unexpected character: %
[33m[your_program] [0m[line 1] Error: Unexpected character: $
[33m[your_program] [0m[line 1] Error: Unexpected character: #
[33m[tester::#EA6] [test-4] [0m[92mâœ“ 3 line(s) match on stderr[0m
[33m[tester::#EA6] [test-4] [0m[92mâœ“ 9 line(s) match on stdout[0m
[33m[tester::#EA6] [test-4] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EA6] [0m[92mTest passed.[0m

[33m[tester::#XC5] [0m[94mRunning tests for Stage #XC5 (Scanning: Other single-character tokens)[0m
[33m[tester::#XC5] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#XC5] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XC5] [test-1.lox] [0m+-
[33m[tester::#XC5] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mMINUS - null
[33m[your_program] [0mEOF  null
[33m[tester::#XC5] [test-1] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#XC5] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XC5] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#XC5] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XC5] [test-2.lox] [0m++--**..,,;;
[33m[tester::#XC5] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mMINUS - null
[33m[your_program] [0mMINUS - null
[33m[your_program] [0mSTAR * null
[33m[your_program] [0mSTAR * null
[33m[your_program] [0mDOT . null
[33m[your_program] [0mDOT . null
[33m[your_program] [0mCOMMA , null
[33m[your_program] [0mCOMMA , null
[33m[your_program] [0mSEMICOLON ; null
[33m[your_program] [0mSEMICOLON ; null
[33m[your_program] [0mEOF  null
[33m[tester::#XC5] [test-2] [0m[92mâœ“ 13 line(s) match on stdout[0m
[33m[tester::#XC5] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XC5] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#XC5] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XC5] [test-3.lox] [0m*,,.+*;
[33m[tester::#XC5] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mSTAR * null
[33m[your_program] [0mCOMMA , null
[33m[your_program] [0mCOMMA , null
[33m[your_program] [0mDOT . null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mSTAR * null
[33m[your_program] [0mSEMICOLON ; null
[33m[your_program] [0mEOF  null
[33m[tester::#XC5] [test-3] [0m[92mâœ“ 8 line(s) match on stdout[0m
[33m[tester::#XC5] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XC5] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#XC5] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#XC5] [test-4.lox] [0m({-.;*+})
[33m[tester::#XC5] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mMINUS - null
[33m[your_program] [0mDOT . null
[33m[your_program] [0mSEMICOLON ; null
[33m[your_program] [0mSTAR * null
[33m[your_program] [0mPLUS + null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[tester::#XC5] [test-4] [0m[92mâœ“ 10 line(s) match on stdout[0m
[33m[tester::#XC5] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#XC5] [0m[92mTest passed.[0m

[33m[tester::#OE8] [0m[94mRunning tests for Stage #OE8 (Scanning: Braces)[0m
[33m[tester::#OE8] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#OE8] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OE8] [test-1.lox] [0m}
[33m[tester::#OE8] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mEOF  null
[33m[tester::#OE8] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#OE8] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OE8] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#OE8] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OE8] [test-2.lox] [0m{{}}
[33m[tester::#OE8] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mEOF  null
[33m[tester::#OE8] [test-2] [0m[92mâœ“ 5 line(s) match on stdout[0m
[33m[tester::#OE8] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OE8] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#OE8] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OE8] [test-3.lox] [0m{{}}{
[33m[tester::#OE8] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mEOF  null
[33m[tester::#OE8] [test-3] [0m[92mâœ“ 6 line(s) match on stdout[0m
[33m[tester::#OE8] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OE8] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#OE8] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OE8] [test-4.lox] [0m}({)({)
[33m[tester::#OE8] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mRIGHT_BRACE } null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_BRACE { null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[tester::#OE8] [test-4] [0m[92mâœ“ 8 line(s) match on stdout[0m
[33m[tester::#OE8] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OE8] [0m[92mTest passed.[0m

[33m[tester::#OL4] [0m[94mRunning tests for Stage #OL4 (Scanning: Parentheses)[0m
[33m[tester::#OL4] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#OL4] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OL4] [test-1.lox] [0m(
[33m[tester::#OL4] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mEOF  null
[33m[tester::#OL4] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#OL4] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OL4] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#OL4] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OL4] [test-2.lox] [0m))
[33m[tester::#OL4] [test-2] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[tester::#OL4] [test-2] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#OL4] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OL4] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#OL4] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OL4] [test-3.lox] [0m())()
[33m[tester::#OL4] [test-3] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[tester::#OL4] [test-3] [0m[92mâœ“ 6 line(s) match on stdout[0m
[33m[tester::#OL4] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OL4] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#OL4] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OL4] [test-4.lox] [0m())(())
[33m[tester::#OL4] [test-4] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mLogs from your program will appear here!
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mLEFT_PAREN ( null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mRIGHT_PAREN ) null
[33m[your_program] [0mEOF  null
[33m[tester::#OL4] [test-4] [0m[92mâœ“ 8 line(s) match on stdout[0m
[33m[tester::#OL4] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OL4] [0m[92mTest passed.[0m

[33m[tester::#RY8] [0m[94mRunning tests for Stage #RY8 (Scanning: Empty file)[0m
[33m[tester::#RY8] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#RY8] [test-1.lox] [0m<|EMPTY FILE|>
[33m[tester::#RY8] [test-1] [0m[94m$ ./your_program.sh tokenize test.lox[0m
[33m[your_program] [0mEOF  null
[33m[your_program] [0mLogs from your program will appear here!
[33m[tester::#RY8] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#RY8] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#RY8] [0m[92mTest passed.[0m

Test passed. Congrats!

[32mMark step as complete: https://app.codecrafters.io/courses/interpreter[0m
