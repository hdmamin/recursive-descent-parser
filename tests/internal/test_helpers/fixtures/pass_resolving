Debug = true

[33m[tester::#DE8] [0m[94mRunning tests for Stage #DE8 (de8)[0m
[33m[tester::#DE8] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#DE8] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DE8] [test-1.lox] [0m[33m// This variable is used in the function `f` below.[0m
[33m[tester::#DE8] [test-1.lox] [0mvar variable = "global";
[33m[tester::#DE8] [test-1.lox] [0m
[33m[tester::#DE8] [test-1.lox] [0m{
[33m[tester::#DE8] [test-1.lox] [0m  fun f() {
[33m[tester::#DE8] [test-1.lox] [0m    print variable;
[33m[tester::#DE8] [test-1.lox] [0m  }
[33m[tester::#DE8] [test-1.lox] [0m
[33m[tester::#DE8] [test-1.lox] [0m  f(); [33m// this should print "global"[0m
[33m[tester::#DE8] [test-1.lox] [0m
[33m[tester::#DE8] [test-1.lox] [0m  [33m// This variable declaration shouldn't affect[0m
[33m[tester::#DE8] [test-1.lox] [0m  [33m// the usage in `f` above.[0m
[33m[tester::#DE8] [test-1.lox] [0m  var variable = "local";
[33m[tester::#DE8] [test-1.lox] [0m
[33m[tester::#DE8] [test-1.lox] [0m  f(); [33m// this should still print "global"[0m
[33m[tester::#DE8] [test-1.lox] [0m}
[33m[tester::#DE8] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mglobal
[33m[your_program] [0mglobal
[33m[tester::#DE8] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#DE8] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#DE8] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#DE8] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DE8] [test-2.lox] [0m[33m// This function is used in the function `f` below.[0m
[33m[tester::#DE8] [test-2.lox] [0mfun global() {
[33m[tester::#DE8] [test-2.lox] [0m  print "global";
[33m[tester::#DE8] [test-2.lox] [0m}
[33m[tester::#DE8] [test-2.lox] [0m
[33m[tester::#DE8] [test-2.lox] [0m{
[33m[tester::#DE8] [test-2.lox] [0m  fun f() {
[33m[tester::#DE8] [test-2.lox] [0m    global();
[33m[tester::#DE8] [test-2.lox] [0m  }
[33m[tester::#DE8] [test-2.lox] [0m
[33m[tester::#DE8] [test-2.lox] [0m  f(); [33m// this should print "global"[0m
[33m[tester::#DE8] [test-2.lox] [0m
[33m[tester::#DE8] [test-2.lox] [0m  [33m// This function declaration shouldn't affect[0m
[33m[tester::#DE8] [test-2.lox] [0m  [33m// the usage in `f` above.[0m
[33m[tester::#DE8] [test-2.lox] [0m  fun global() {
[33m[tester::#DE8] [test-2.lox] [0m    print "local";
[33m[tester::#DE8] [test-2.lox] [0m  }
[33m[tester::#DE8] [test-2.lox] [0m
[33m[tester::#DE8] [test-2.lox] [0m  f(); [33m// this should also print "global"[0m
[33m[tester::#DE8] [test-2.lox] [0m}
[33m[tester::#DE8] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mglobal
[33m[your_program] [0mglobal
[33m[tester::#DE8] [test-2] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#DE8] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#DE8] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#DE8] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DE8] [test-3.lox] [0mvar x = "global";
[33m[tester::#DE8] [test-3.lox] [0m
[33m[tester::#DE8] [test-3.lox] [0mfun outer() {
[33m[tester::#DE8] [test-3.lox] [0m  var x = "outer";
[33m[tester::#DE8] [test-3.lox] [0m
[33m[tester::#DE8] [test-3.lox] [0m  fun middle() {
[33m[tester::#DE8] [test-3.lox] [0m    [33m// The `inner` function should capture the[0m
[33m[tester::#DE8] [test-3.lox] [0m    [33m// variable from the closest outer[0m
[33m[tester::#DE8] [test-3.lox] [0m    [33m// scope, which is the `outer` function's[0m
[33m[tester::#DE8] [test-3.lox] [0m    [33m// scope.[0m
[33m[tester::#DE8] [test-3.lox] [0m    fun inner() {
[33m[tester::#DE8] [test-3.lox] [0m      print x; [33m// Should capture "outer"[0m
[33m[tester::#DE8] [test-3.lox] [0m    }
[33m[tester::#DE8] [test-3.lox] [0m
[33m[tester::#DE8] [test-3.lox] [0m    inner(); [33m// Should print "outer"[0m
[33m[tester::#DE8] [test-3.lox] [0m
[33m[tester::#DE8] [test-3.lox] [0m    [33m// This variable declaration shouldn't affect[0m
[33m[tester::#DE8] [test-3.lox] [0m    [33m// the usage in `inner` above.[0m
[33m[tester::#DE8] [test-3.lox] [0m    var x = "middle";
[33m[tester::#DE8] [test-3.lox] [0m
[33m[tester::#DE8] [test-3.lox] [0m    inner(); [33m// Should still print "outer"[0m
[33m[tester::#DE8] [test-3.lox] [0m  }
[33m[tester::#DE8] [test-3.lox] [0m
[33m[tester::#DE8] [test-3.lox] [0m  middle();
[33m[tester::#DE8] [test-3.lox] [0m}
[33m[tester::#DE8] [test-3.lox] [0m
[33m[tester::#DE8] [test-3.lox] [0mouter();
[33m[tester::#DE8] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mouter
[33m[your_program] [0mouter
[33m[tester::#DE8] [test-3] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#DE8] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#DE8] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#DE8] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DE8] [test-4.lox] [0mvar count = 0;
[33m[tester::#DE8] [test-4.lox] [0m
[33m[tester::#DE8] [test-4.lox] [0m{
[33m[tester::#DE8] [test-4.lox] [0m  [33m// The `counter` function should use the `count`[0m
[33m[tester::#DE8] [test-4.lox] [0m  [33m// variable from the[0m
[33m[tester::#DE8] [test-4.lox] [0m  [33m// global scope.[0m
[33m[tester::#DE8] [test-4.lox] [0m  fun makeCounter() {
[33m[tester::#DE8] [test-4.lox] [0m    fun counter() {
[33m[tester::#DE8] [test-4.lox] [0m      [33m// This should increment the `count`[0m
[33m[tester::#DE8] [test-4.lox] [0m      [33m// variable from the global scope.[0m
[33m[tester::#DE8] [test-4.lox] [0m      count = count + 1;
[33m[tester::#DE8] [test-4.lox] [0m      print count;
[33m[tester::#DE8] [test-4.lox] [0m    }
[33m[tester::#DE8] [test-4.lox] [0m    return counter;
[33m[tester::#DE8] [test-4.lox] [0m  }
[33m[tester::#DE8] [test-4.lox] [0m
[33m[tester::#DE8] [test-4.lox] [0m  var counter1 = makeCounter();
[33m[tester::#DE8] [test-4.lox] [0m  counter1(); [33m// Should print 1[0m
[33m[tester::#DE8] [test-4.lox] [0m  counter1(); [33m// Should print 2[0m
[33m[tester::#DE8] [test-4.lox] [0m
[33m[tester::#DE8] [test-4.lox] [0m  [33m// This variable declaration shouldn't affect[0m
[33m[tester::#DE8] [test-4.lox] [0m  [33m// our counter.[0m
[33m[tester::#DE8] [test-4.lox] [0m  var count = 0;
[33m[tester::#DE8] [test-4.lox] [0m
[33m[tester::#DE8] [test-4.lox] [0m  counter1(); [33m// Should print 3[0m
[33m[tester::#DE8] [test-4.lox] [0m}
[33m[tester::#DE8] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m1
[33m[your_program] [0m2
[33m[your_program] [0m3
[33m[tester::#DE8] [test-4] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#DE8] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#DE8] [0m[92mTest passed.[0m

[33m[tester::#PT7] [0m[94mRunning tests for Stage #PT7 (pt7)[0m
[33m[tester::#PT7] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#PT7] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PT7] [test-1.lox] [0m[33m// First declaration of variable 'a' in global[0m
[33m[tester::#PT7] [test-1.lox] [0m[33m// scope[0m
[33m[tester::#PT7] [test-1.lox] [0mvar a = "value";
[33m[tester::#PT7] [test-1.lox] [0m
[33m[tester::#PT7] [test-1.lox] [0m[33m// Redeclaring 'a' with its own value should be[0m
[33m[tester::#PT7] [test-1.lox] [0m[33m// allowed in global scope[0m
[33m[tester::#PT7] [test-1.lox] [0mvar a = a;
[33m[tester::#PT7] [test-1.lox] [0mprint a; [33m// this should print "value"[0m
[33m[tester::#PT7] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mvalue
[33m[tester::#PT7] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#PT7] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#PT7] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#PT7] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PT7] [test-2.lox] [0m[33m// Declare outer variable 'a' in global scope[0m
[33m[tester::#PT7] [test-2.lox] [0mvar a = "outer";
[33m[tester::#PT7] [test-2.lox] [0m
[33m[tester::#PT7] [test-2.lox] [0m{
[33m[tester::#PT7] [test-2.lox] [0m  [33m// Attempting to declare local variable'a'[0m
[33m[tester::#PT7] [test-2.lox] [0m  [33m// initialized with itself[0m
[33m[tester::#PT7] [test-2.lox] [0m  var a = a; [33m// expect compile error[0m
[33m[tester::#PT7] [test-2.lox] [0m}
[33m[tester::#PT7] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 7] Error at 'a': Can't read local variable in its own initializer.
[33m[tester::#PT7] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#PT7] [test-2] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#PT7] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#PT7] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PT7] [test-3.lox] [0m[33m// Helper function that simply returns its argument[0m
[33m[tester::#PT7] [test-3.lox] [0mfun returnArg(arg) {
[33m[tester::#PT7] [test-3.lox] [0m  return arg;
[33m[tester::#PT7] [test-3.lox] [0m}
[33m[tester::#PT7] [test-3.lox] [0m
[33m[tester::#PT7] [test-3.lox] [0m[33m// Declare global variable 'b'[0m
[33m[tester::#PT7] [test-3.lox] [0mvar b = "global";
[33m[tester::#PT7] [test-3.lox] [0m
[33m[tester::#PT7] [test-3.lox] [0m{
[33m[tester::#PT7] [test-3.lox] [0m  [33m// Local variable declaration[0m
[33m[tester::#PT7] [test-3.lox] [0m  var a = "first";
[33m[tester::#PT7] [test-3.lox] [0m
[33m[tester::#PT7] [test-3.lox] [0m  [33m// Attempting to initialize local variable 'b'[0m
[33m[tester::#PT7] [test-3.lox] [0m  [33m// using local variable 'b'[0m
[33m[tester::#PT7] [test-3.lox] [0m  [33m// through a function call[0m
[33m[tester::#PT7] [test-3.lox] [0m  var b = returnArg(b); [33m// expect compile error[0m
[33m[tester::#PT7] [test-3.lox] [0m  print b;
[33m[tester::#PT7] [test-3.lox] [0m}
[33m[tester::#PT7] [test-3.lox] [0m
[33m[tester::#PT7] [test-3.lox] [0mvar b = b + " updated";
[33m[tester::#PT7] [test-3.lox] [0mprint b;
[33m[tester::#PT7] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 16] Error at 'b': Can't read local variable in its own initializer.
[33m[tester::#PT7] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#PT7] [test-3] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#PT7] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#PT7] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PT7] [test-4.lox] [0mfun outer() {
[33m[tester::#PT7] [test-4.lox] [0m  [33m// Declare variable 'a' in outer function scope[0m
[33m[tester::#PT7] [test-4.lox] [0m  var a = "outer";
[33m[tester::#PT7] [test-4.lox] [0m
[33m[tester::#PT7] [test-4.lox] [0m  [33m// Inner function with its own scope[0m
[33m[tester::#PT7] [test-4.lox] [0m  fun inner() {
[33m[tester::#PT7] [test-4.lox] [0m    [33m// Attempting to declare local 'a' initialized[0m
[33m[tester::#PT7] [test-4.lox] [0m    [33m// with itself[0m
[33m[tester::#PT7] [test-4.lox] [0m    var a = a; [33m// expect compile error[0m
[33m[tester::#PT7] [test-4.lox] [0m    print a;
[33m[tester::#PT7] [test-4.lox] [0m  }
[33m[tester::#PT7] [test-4.lox] [0m
[33m[tester::#PT7] [test-4.lox] [0m  inner();
[33m[tester::#PT7] [test-4.lox] [0m}
[33m[tester::#PT7] [test-4.lox] [0m
[33m[tester::#PT7] [test-4.lox] [0mouter();
[33m[tester::#PT7] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 9] Error at 'a': Can't read local variable in its own initializer.
[33m[tester::#PT7] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#PT7] [test-4] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#PT7] [0m[92mTest passed.[0m

[33m[tester::#PZ7] [0m[94mRunning tests for Stage #PZ7 (pz7)[0m
[33m[tester::#PZ7] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#PZ7] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PZ7] [test-1.lox] [0m{
[33m[tester::#PZ7] [test-1.lox] [0m  var a = "value";
[33m[tester::#PZ7] [test-1.lox] [0m
[33m[tester::#PZ7] [test-1.lox] [0m  [33m// Attempting to redeclare 'a' in the same scope[0m
[33m[tester::#PZ7] [test-1.lox] [0m  var a = "other"; [33m// expect compile error[0m
[33m[tester::#PZ7] [test-1.lox] [0m}
[33m[tester::#PZ7] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 5] Error at 'a': Already a variable with this name in this scope.
[33m[tester::#PZ7] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#PZ7] [test-1] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#PZ7] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#PZ7] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PZ7] [test-2.lox] [0m[33m// Function parameters are considered variables in[0m
[33m[tester::#PZ7] [test-2.lox] [0m[33m// the function's scope[0m
[33m[tester::#PZ7] [test-2.lox] [0mfun foo(a) {
[33m[tester::#PZ7] [test-2.lox] [0m  [33m// Attempting to declare a variable with same[0m
[33m[tester::#PZ7] [test-2.lox] [0m  [33m// name as parameter[0m
[33m[tester::#PZ7] [test-2.lox] [0m  var a; [33m// expect compile error[0m
[33m[tester::#PZ7] [test-2.lox] [0m}
[33m[tester::#PZ7] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 6] Error at 'a': Already a variable with this name in this scope.
[33m[tester::#PZ7] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#PZ7] [test-2] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#PZ7] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#PZ7] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PZ7] [test-3.lox] [0m[33m// Function parameters must have unique names[0m
[33m[tester::#PZ7] [test-3.lox] [0mfun foo(arg, arg) { [33m// expect compile error[0m
[33m[tester::#PZ7] [test-3.lox] [0m  [33m// Function body is irrelevant as the error[0m
[33m[tester::#PZ7] [test-3.lox] [0m  [33m// occurs in parameter list[0m
[33m[tester::#PZ7] [test-3.lox] [0m  "body";
[33m[tester::#PZ7] [test-3.lox] [0m}
[33m[tester::#PZ7] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 2] Error at 'arg': Already a variable with this name in this scope.
[33m[tester::#PZ7] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#PZ7] [test-3] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#PZ7] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#PZ7] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#PZ7] [test-4.lox] [0m[33m// Due to the compile error on line 17[0m
[33m[tester::#PZ7] [test-4.lox] [0m[33m// Nothing should be printed[0m
[33m[tester::#PZ7] [test-4.lox] [0mvar a = "1";
[33m[tester::#PZ7] [test-4.lox] [0mprint a;
[33m[tester::#PZ7] [test-4.lox] [0m
[33m[tester::#PZ7] [test-4.lox] [0mvar a;
[33m[tester::#PZ7] [test-4.lox] [0mprint a;
[33m[tester::#PZ7] [test-4.lox] [0m
[33m[tester::#PZ7] [test-4.lox] [0mvar a = "2";
[33m[tester::#PZ7] [test-4.lox] [0mprint a;
[33m[tester::#PZ7] [test-4.lox] [0m
[33m[tester::#PZ7] [test-4.lox] [0m{
[33m[tester::#PZ7] [test-4.lox] [0m  [33m// First declaration in local scope[0m
[33m[tester::#PZ7] [test-4.lox] [0m  var a = "1";
[33m[tester::#PZ7] [test-4.lox] [0m
[33m[tester::#PZ7] [test-4.lox] [0m  [33m// Attempting to redeclare in local scope[0m
[33m[tester::#PZ7] [test-4.lox] [0m  var a = "2"; [33m// This should be a compile error[0m
[33m[tester::#PZ7] [test-4.lox] [0m  print a;
[33m[tester::#PZ7] [test-4.lox] [0m}
[33m[tester::#PZ7] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 17] Error at 'a': Already a variable with this name in this scope.
[33m[tester::#PZ7] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#PZ7] [test-4] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#PZ7] [0m[92mTest passed.[0m

[33m[tester::#EH3] [0m[94mRunning tests for Stage #EH3 (eh3)[0m
[33m[tester::#EH3] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#EH3] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EH3] [test-1.lox] [0mfun foo() {
[33m[tester::#EH3] [test-1.lox] [0m  [33m// Return statements are allowed within function[0m
[33m[tester::#EH3] [test-1.lox] [0m  [33m// scope[0m
[33m[tester::#EH3] [test-1.lox] [0m  return "at function scope is ok";
[33m[tester::#EH3] [test-1.lox] [0m}
[33m[tester::#EH3] [test-1.lox] [0m
[33m[tester::#EH3] [test-1.lox] [0m[33m// Return statements are not allowed at the[0m
[33m[tester::#EH3] [test-1.lox] [0m[33m// top-level[0m
[33m[tester::#EH3] [test-1.lox] [0mreturn; [33m// expect compile error[0m
[33m[tester::#EH3] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 9] Error at 'return': Can't return from top-level code.
[33m[tester::#EH3] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#EH3] [test-1] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EH3] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#EH3] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EH3] [test-2.lox] [0mfun foo() {
[33m[tester::#EH3] [test-2.lox] [0m  if (true) {
[33m[tester::#EH3] [test-2.lox] [0m    return "early return";
[33m[tester::#EH3] [test-2.lox] [0m  }
[33m[tester::#EH3] [test-2.lox] [0m
[33m[tester::#EH3] [test-2.lox] [0m  for (var i = 0; i < 10; i = i + 1) {
[33m[tester::#EH3] [test-2.lox] [0m    return "loop return";
[33m[tester::#EH3] [test-2.lox] [0m  }
[33m[tester::#EH3] [test-2.lox] [0m}
[33m[tester::#EH3] [test-2.lox] [0m
[33m[tester::#EH3] [test-2.lox] [0mif (true) {
[33m[tester::#EH3] [test-2.lox] [0m  return "conditional return";
[33m[tester::#EH3] [test-2.lox] [0m  [33m// expect compile error[0m
[33m[tester::#EH3] [test-2.lox] [0m}
[33m[tester::#EH3] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 12] Error at 'return': Can't return from top-level code.
[33m[tester::#EH3] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#EH3] [test-2] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EH3] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#EH3] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EH3] [test-3.lox] [0m{
[33m[tester::#EH3] [test-3.lox] [0m  [33m// Return statements are not allowed in[0m
[33m[tester::#EH3] [test-3.lox] [0m  [33m// top-level blocks[0m
[33m[tester::#EH3] [test-3.lox] [0m  return "not allowed in a block either";
[33m[tester::#EH3] [test-3.lox] [0m  [33m// expect compile error[0m
[33m[tester::#EH3] [test-3.lox] [0m}
[33m[tester::#EH3] [test-3.lox] [0m
[33m[tester::#EH3] [test-3.lox] [0mfun allowed() {
[33m[tester::#EH3] [test-3.lox] [0m  if (true) {
[33m[tester::#EH3] [test-3.lox] [0m    return "this is fine";
[33m[tester::#EH3] [test-3.lox] [0m  }
[33m[tester::#EH3] [test-3.lox] [0m  return;
[33m[tester::#EH3] [test-3.lox] [0m}
[33m[tester::#EH3] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 4] Error at 'return': Can't return from top-level code.
[33m[tester::#EH3] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#EH3] [test-3] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EH3] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#EH3] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EH3] [test-4.lox] [0mfun outer() {
[33m[tester::#EH3] [test-4.lox] [0m  fun inner() {
[33m[tester::#EH3] [test-4.lox] [0m    return "ok";
[33m[tester::#EH3] [test-4.lox] [0m  }
[33m[tester::#EH3] [test-4.lox] [0m
[33m[tester::#EH3] [test-4.lox] [0m  return "also ok";
[33m[tester::#EH3] [test-4.lox] [0m}
[33m[tester::#EH3] [test-4.lox] [0m
[33m[tester::#EH3] [test-4.lox] [0mif (true) {
[33m[tester::#EH3] [test-4.lox] [0m  fun nested() {
[33m[tester::#EH3] [test-4.lox] [0m    return;
[33m[tester::#EH3] [test-4.lox] [0m  }
[33m[tester::#EH3] [test-4.lox] [0m
[33m[tester::#EH3] [test-4.lox] [0m  [33m// Return statements are not allowed outside of[0m
[33m[tester::#EH3] [test-4.lox] [0m  [33m// functions[0m
[33m[tester::#EH3] [test-4.lox] [0m  return "not ok"; [33m// expect compile error[0m
[33m[tester::#EH3] [test-4.lox] [0m}
[33m[tester::#EH3] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 16] Error at 'return': Can't return from top-level code.
[33m[tester::#EH3] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#EH3] [test-4] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EH3] [0m[92mTest passed.[0m
