Debug = true

[33m[tester::#VF4] [0m[94mRunning tests for Stage #VF4 (vf4)[0m
[33m[tester::#VF4] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#VF4] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#VF4] [test-1.lox] [0m[33m// Class declaration with empty body[0m
[33m[tester::#VF4] [test-1.lox] [0mclass Spaceship {}
[33m[tester::#VF4] [test-1.lox] [0mprint Spaceship;
[33m[tester::#VF4] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mSpaceship
[33m[tester::#VF4] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#VF4] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#VF4] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#VF4] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#VF4] [test-2.lox] [0m[33m// Multiple class declarations with empty body[0m
[33m[tester::#VF4] [test-2.lox] [0mclass Robot {}
[33m[tester::#VF4] [test-2.lox] [0mclass Wizard {}
[33m[tester::#VF4] [test-2.lox] [0mprint Robot;
[33m[tester::#VF4] [test-2.lox] [0mprint Wizard;
[33m[tester::#VF4] [test-2.lox] [0mprint "Both classes successfully printed";
[33m[tester::#VF4] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mRobot
[33m[your_program] [0mWizard
[33m[your_program] [0mBoth classes successfully printed
[33m[tester::#VF4] [test-2] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#VF4] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#VF4] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#VF4] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#VF4] [test-3.lox] [0m{
[33m[tester::#VF4] [test-3.lox] [0m  [33m// Class declaration inside blocks should work[0m
[33m[tester::#VF4] [test-3.lox] [0m  class Dinosaur {}
[33m[tester::#VF4] [test-3.lox] [0m  print "Inside block: Dinosaur exists";
[33m[tester::#VF4] [test-3.lox] [0m  print Dinosaur;
[33m[tester::#VF4] [test-3.lox] [0m}
[33m[tester::#VF4] [test-3.lox] [0mprint "Accessing out-of-scope class:";
[33m[tester::#VF4] [test-3.lox] [0mprint Dinosaur;  [33m// expect runtime error[0m
[33m[tester::#VF4] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mInside block: Dinosaur exists
[33m[your_program] [0mDinosaur
[33m[your_program] [0mAccessing out-of-scope class:
[33m[your_program] [0mUndefined variable 'Dinosaur'.
[33m[your_program] [0m[line 8]
[33m[tester::#VF4] [test-3] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#VF4] [test-3] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#VF4] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#VF4] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#VF4] [test-4.lox] [0m[33m// Class declaration inside function should work[0m
[33m[tester::#VF4] [test-4.lox] [0mfun foo() {
[33m[tester::#VF4] [test-4.lox] [0m  class Superhero {}
[33m[tester::#VF4] [test-4.lox] [0m  print "Class declared inside function";
[33m[tester::#VF4] [test-4.lox] [0m  print Superhero;
[33m[tester::#VF4] [test-4.lox] [0m}
[33m[tester::#VF4] [test-4.lox] [0m
[33m[tester::#VF4] [test-4.lox] [0mfoo();
[33m[tester::#VF4] [test-4.lox] [0mprint "Function called successfully";
[33m[tester::#VF4] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mClass declared inside function
[33m[your_program] [0mSuperhero
[33m[your_program] [0mFunction called successfully
[33m[tester::#VF4] [test-4] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#VF4] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#VF4] [0m[92mTest passed.[0m

[33m[tester::#YK8] [0m[94mRunning tests for Stage #YK8 (yk8)[0m
[33m[tester::#YK8] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#YK8] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YK8] [test-1.lox] [0m[33m// Class instantiation[0m
[33m[tester::#YK8] [test-1.lox] [0mclass Spaceship {}
[33m[tester::#YK8] [test-1.lox] [0mvar falcon = Spaceship();
[33m[tester::#YK8] [test-1.lox] [0mprint falcon;
[33m[tester::#YK8] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mSpaceship instance
[33m[tester::#YK8] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YK8] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YK8] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#YK8] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YK8] [test-2.lox] [0m[33m// Instantiating multiple instances of a class[0m
[33m[tester::#YK8] [test-2.lox] [0m[33m// should work[0m
[33m[tester::#YK8] [test-2.lox] [0mclass Robot {}
[33m[tester::#YK8] [test-2.lox] [0mvar r1 = Robot();
[33m[tester::#YK8] [test-2.lox] [0mvar r2 = Robot();
[33m[tester::#YK8] [test-2.lox] [0m
[33m[tester::#YK8] [test-2.lox] [0mprint "Created multiple robots:";
[33m[tester::#YK8] [test-2.lox] [0mprint r1;
[33m[tester::#YK8] [test-2.lox] [0mprint r2;
[33m[tester::#YK8] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mCreated multiple robots:
[33m[your_program] [0mRobot instance
[33m[your_program] [0mRobot instance
[33m[tester::#YK8] [test-2] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#YK8] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YK8] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#YK8] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YK8] [test-3.lox] [0mclass Wizard {}
[33m[tester::#YK8] [test-3.lox] [0mclass Dragon {}
[33m[tester::#YK8] [test-3.lox] [0m
[33m[tester::#YK8] [test-3.lox] [0m[33m// Instantiating classes in a function should work[0m
[33m[tester::#YK8] [test-3.lox] [0mfun createCharacters() {
[33m[tester::#YK8] [test-3.lox] [0m  var merlin = Wizard();
[33m[tester::#YK8] [test-3.lox] [0m  var smaug = Dragon();
[33m[tester::#YK8] [test-3.lox] [0m  print "Characters created in fantasy world:";
[33m[tester::#YK8] [test-3.lox] [0m  print merlin;
[33m[tester::#YK8] [test-3.lox] [0m  print smaug;
[33m[tester::#YK8] [test-3.lox] [0m  return merlin;
[33m[tester::#YK8] [test-3.lox] [0m}
[33m[tester::#YK8] [test-3.lox] [0m
[33m[tester::#YK8] [test-3.lox] [0mvar mainCharacter = createCharacters();
[33m[tester::#YK8] [test-3.lox] [0m[33m// An instance of a class should be truthy[0m
[33m[tester::#YK8] [test-3.lox] [0mif (mainCharacter) {
[33m[tester::#YK8] [test-3.lox] [0m  print "The main character is:";
[33m[tester::#YK8] [test-3.lox] [0m  print mainCharacter;
[33m[tester::#YK8] [test-3.lox] [0m} else {
[33m[tester::#YK8] [test-3.lox] [0m  print "Failed to create a main character.";
[33m[tester::#YK8] [test-3.lox] [0m}
[33m[tester::#YK8] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mCharacters created in fantasy world:
[33m[your_program] [0mWizard instance
[33m[your_program] [0mDragon instance
[33m[your_program] [0mThe main character is:
[33m[your_program] [0mWizard instance
[33m[tester::#YK8] [test-3] [0m[92mâœ“ 5 line(s) match on stdout[0m
[33m[tester::#YK8] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YK8] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#YK8] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YK8] [test-4.lox] [0mclass Superhero {}
[33m[tester::#YK8] [test-4.lox] [0m
[33m[tester::#YK8] [test-4.lox] [0mvar count = 0;
[33m[tester::#YK8] [test-4.lox] [0mwhile (count < 3) {
[33m[tester::#YK8] [test-4.lox] [0m  var hero = Superhero();
[33m[tester::#YK8] [test-4.lox] [0m  print "Hero created:";
[33m[tester::#YK8] [test-4.lox] [0m  print hero;
[33m[tester::#YK8] [test-4.lox] [0m  count = count + 1;
[33m[tester::#YK8] [test-4.lox] [0m}
[33m[tester::#YK8] [test-4.lox] [0m
[33m[tester::#YK8] [test-4.lox] [0mprint "All heroes created!";
[33m[tester::#YK8] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mHero created:
[33m[your_program] [0mSuperhero instance
[33m[your_program] [0mHero created:
[33m[your_program] [0mSuperhero instance
[33m[your_program] [0mHero created:
[33m[your_program] [0mSuperhero instance
[33m[your_program] [0mAll heroes created!
[33m[tester::#YK8] [test-4] [0m[92mâœ“ 7 line(s) match on stdout[0m
[33m[tester::#YK8] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YK8] [0m[92mTest passed.[0m

[33m[tester::#YF3] [0m[94mRunning tests for Stage #YF3 (yf3)[0m
[33m[tester::#YF3] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#YF3] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YF3] [test-1.lox] [0mclass Spaceship {}
[33m[tester::#YF3] [test-1.lox] [0mvar falcon = Spaceship();
[33m[tester::#YF3] [test-1.lox] [0m
[33m[tester::#YF3] [test-1.lox] [0m[33m// Setting properties on an instance should work[0m
[33m[tester::#YF3] [test-1.lox] [0mfalcon.name = "Millennium Falcon";
[33m[tester::#YF3] [test-1.lox] [0mfalcon.speed = 75.5;
[33m[tester::#YF3] [test-1.lox] [0m
[33m[tester::#YF3] [test-1.lox] [0m[33m// Getting properties on an instance should work[0m
[33m[tester::#YF3] [test-1.lox] [0mprint "Ship details:";
[33m[tester::#YF3] [test-1.lox] [0mprint falcon.name;
[33m[tester::#YF3] [test-1.lox] [0mprint falcon.speed;
[33m[tester::#YF3] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mShip details:
[33m[your_program] [0mMillennium Falcon
[33m[your_program] [0m75.5
[33m[tester::#YF3] [test-1] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#YF3] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YF3] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#YF3] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YF3] [test-2.lox] [0mclass Robot {}
[33m[tester::#YF3] [test-2.lox] [0mvar r2d2 = Robot();
[33m[tester::#YF3] [test-2.lox] [0m
[33m[tester::#YF3] [test-2.lox] [0m[33m// Setting properties on an instance should work[0m
[33m[tester::#YF3] [test-2.lox] [0mr2d2.model = "Astromech";
[33m[tester::#YF3] [test-2.lox] [0mr2d2.operational = false;
[33m[tester::#YF3] [test-2.lox] [0m
[33m[tester::#YF3] [test-2.lox] [0m[33m// Getting properties on an instance should work[0m
[33m[tester::#YF3] [test-2.lox] [0mif (r2d2.operational) {
[33m[tester::#YF3] [test-2.lox] [0m  print r2d2.model;
[33m[tester::#YF3] [test-2.lox] [0m  r2d2.mission = "Navigate hyperspace";
[33m[tester::#YF3] [test-2.lox] [0m  print r2d2.mission;
[33m[tester::#YF3] [test-2.lox] [0m}
[33m[tester::#YF3] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[tester::#YF3] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YF3] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YF3] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#YF3] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YF3] [test-3.lox] [0mclass Superhero {}
[33m[tester::#YF3] [test-3.lox] [0mvar batman = Superhero();
[33m[tester::#YF3] [test-3.lox] [0mvar superman = Superhero();
[33m[tester::#YF3] [test-3.lox] [0m
[33m[tester::#YF3] [test-3.lox] [0m[33m// Setting properties on an instance should work[0m
[33m[tester::#YF3] [test-3.lox] [0mbatman.name = "Batman";
[33m[tester::#YF3] [test-3.lox] [0mbatman.called = 80;
[33m[tester::#YF3] [test-3.lox] [0m
[33m[tester::#YF3] [test-3.lox] [0m[33m// Setting properties on an instance should work[0m
[33m[tester::#YF3] [test-3.lox] [0msuperman.name = "Superman";
[33m[tester::#YF3] [test-3.lox] [0msuperman.called = 16;
[33m[tester::#YF3] [test-3.lox] [0m
[33m[tester::#YF3] [test-3.lox] [0m[33m// Getting properties on an instance should work[0m
[33m[tester::#YF3] [test-3.lox] [0mprint "Times " + superman.name + " was called: ";
[33m[tester::#YF3] [test-3.lox] [0mprint superman.called;
[33m[tester::#YF3] [test-3.lox] [0mprint "Times " + batman.name + " was called: ";
[33m[tester::#YF3] [test-3.lox] [0mprint batman.called;
[33m[tester::#YF3] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mTimes Superman was called: 
[33m[your_program] [0m16
[33m[your_program] [0mTimes Batman was called: 
[33m[your_program] [0m80
[33m[tester::#YF3] [test-3] [0m[92mâœ“ 4 line(s) match on stdout[0m
[33m[tester::#YF3] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YF3] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#YF3] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YF3] [test-4.lox] [0mclass Wizard {}
[33m[tester::#YF3] [test-4.lox] [0mvar gandalf = Wizard();
[33m[tester::#YF3] [test-4.lox] [0m
[33m[tester::#YF3] [test-4.lox] [0mgandalf.color = "Grey";
[33m[tester::#YF3] [test-4.lox] [0mgandalf.power = nil;
[33m[tester::#YF3] [test-4.lox] [0mprint gandalf.color;
[33m[tester::#YF3] [test-4.lox] [0m
[33m[tester::#YF3] [test-4.lox] [0m[33m// functions should be able to accept class[0m
[33m[tester::#YF3] [test-4.lox] [0m[33m// instances and get or set properties on them[0m
[33m[tester::#YF3] [test-4.lox] [0mfun promote(wizard) {
[33m[tester::#YF3] [test-4.lox] [0m  wizard.color = "White";
[33m[tester::#YF3] [test-4.lox] [0m  if (false) {
[33m[tester::#YF3] [test-4.lox] [0m    wizard.power = 100;
[33m[tester::#YF3] [test-4.lox] [0m  } else {
[33m[tester::#YF3] [test-4.lox] [0m    wizard.power = 0;
[33m[tester::#YF3] [test-4.lox] [0m  }
[33m[tester::#YF3] [test-4.lox] [0m}
[33m[tester::#YF3] [test-4.lox] [0m
[33m[tester::#YF3] [test-4.lox] [0mpromote(gandalf);
[33m[tester::#YF3] [test-4.lox] [0mprint gandalf.color;
[33m[tester::#YF3] [test-4.lox] [0mprint gandalf.power;
[33m[tester::#YF3] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mGrey
[33m[your_program] [0mWhite
[33m[your_program] [0m0
[33m[tester::#YF3] [test-4] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#YF3] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YF3] [0m[92mTest passed.[0m

[33m[tester::#QR2] [0m[94mRunning tests for Stage #QR2 (qr2)[0m
[33m[tester::#QR2] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#QR2] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#QR2] [test-1.lox] [0mclass Robot {
[33m[tester::#QR2] [test-1.lox] [0m  beep() {
[33m[tester::#QR2] [test-1.lox] [0m    print "Beep boop!";
[33m[tester::#QR2] [test-1.lox] [0m  }
[33m[tester::#QR2] [test-1.lox] [0m}
[33m[tester::#QR2] [test-1.lox] [0m
[33m[tester::#QR2] [test-1.lox] [0mvar r2d2 = Robot();
[33m[tester::#QR2] [test-1.lox] [0m[33m// Calling a method on an instance should work[0m
[33m[tester::#QR2] [test-1.lox] [0mr2d2.beep();
[33m[tester::#QR2] [test-1.lox] [0m
[33m[tester::#QR2] [test-1.lox] [0m[33m// Calling a method on a class instance should work[0m
[33m[tester::#QR2] [test-1.lox] [0mRobot().beep();
[33m[tester::#QR2] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mBeep boop!
[33m[your_program] [0mBeep boop!
[33m[tester::#QR2] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#QR2] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#QR2] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#QR2] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#QR2] [test-2.lox] [0m{
[33m[tester::#QR2] [test-2.lox] [0m  class Foo {
[33m[tester::#QR2] [test-2.lox] [0m    returnSelf() {
[33m[tester::#QR2] [test-2.lox] [0m      [33m// Should be able to return the class itself[0m
[33m[tester::#QR2] [test-2.lox] [0m      return Foo;
[33m[tester::#QR2] [test-2.lox] [0m    }
[33m[tester::#QR2] [test-2.lox] [0m  }
[33m[tester::#QR2] [test-2.lox] [0m
[33m[tester::#QR2] [test-2.lox] [0m  [33m// Calling a method on an instance should work[0m
[33m[tester::#QR2] [test-2.lox] [0m  print Foo().returnSelf();
[33m[tester::#QR2] [test-2.lox] [0m}
[33m[tester::#QR2] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mFoo
[33m[tester::#QR2] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#QR2] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#QR2] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#QR2] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#QR2] [test-3.lox] [0mclass Wizard {
[33m[tester::#QR2] [test-3.lox] [0m  castSpell(spell) {
[33m[tester::#QR2] [test-3.lox] [0m    [33m// Methods should be able to accept a parameter[0m
[33m[tester::#QR2] [test-3.lox] [0m    print "Casting a magical spell: " + spell;
[33m[tester::#QR2] [test-3.lox] [0m  }
[33m[tester::#QR2] [test-3.lox] [0m}
[33m[tester::#QR2] [test-3.lox] [0m
[33m[tester::#QR2] [test-3.lox] [0mclass Dragon {
[33m[tester::#QR2] [test-3.lox] [0m  [33m// Methods should be able to accept multiple[0m
[33m[tester::#QR2] [test-3.lox] [0m  [33m// parameters[0m
[33m[tester::#QR2] [test-3.lox] [0m  breatheFire(fire, intensity) {
[33m[tester::#QR2] [test-3.lox] [0m    print "Breathing " + fire + " with intensity: "
[33m[tester::#QR2] [test-3.lox] [0m    + intensity;
[33m[tester::#QR2] [test-3.lox] [0m  }
[33m[tester::#QR2] [test-3.lox] [0m}
[33m[tester::#QR2] [test-3.lox] [0m
[33m[tester::#QR2] [test-3.lox] [0mvar merlin = Wizard();
[33m[tester::#QR2] [test-3.lox] [0mvar smaug = Dragon();
[33m[tester::#QR2] [test-3.lox] [0m
[33m[tester::#QR2] [test-3.lox] [0mif (false) {
[33m[tester::#QR2] [test-3.lox] [0m  var action = merlin.castSpell;
[33m[tester::#QR2] [test-3.lox] [0m  action("Fireball");
[33m[tester::#QR2] [test-3.lox] [0m} else {
[33m[tester::#QR2] [test-3.lox] [0m  var action = smaug.breatheFire;
[33m[tester::#QR2] [test-3.lox] [0m  action("Fire", "100");
[33m[tester::#QR2] [test-3.lox] [0m}
[33m[tester::#QR2] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mBreathing Fire with intensity: 100
[33m[tester::#QR2] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#QR2] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#QR2] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#QR2] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#QR2] [test-4.lox] [0mclass Superhero {
[33m[tester::#QR2] [test-4.lox] [0m  [33m// Methods should be able to accept a parameter[0m
[33m[tester::#QR2] [test-4.lox] [0m  useSpecialPower(hero) {
[33m[tester::#QR2] [test-4.lox] [0m    print "Using power: " + hero.specialPower;
[33m[tester::#QR2] [test-4.lox] [0m  }
[33m[tester::#QR2] [test-4.lox] [0m
[33m[tester::#QR2] [test-4.lox] [0m  [33m// Methods should be able to accept a parameter[0m
[33m[tester::#QR2] [test-4.lox] [0m  [33m// of any type[0m
[33m[tester::#QR2] [test-4.lox] [0m  hasSpecialPower(hero) {
[33m[tester::#QR2] [test-4.lox] [0m    return hero.specialPower;
[33m[tester::#QR2] [test-4.lox] [0m  }
[33m[tester::#QR2] [test-4.lox] [0m
[33m[tester::#QR2] [test-4.lox] [0m  [33m// Methods should be able to accept class[0m
[33m[tester::#QR2] [test-4.lox] [0m  [33m// instances as parameters and then update their[0m
[33m[tester::#QR2] [test-4.lox] [0m  [33m// properties[0m
[33m[tester::#QR2] [test-4.lox] [0m  giveSpecialPower(hero, power) {
[33m[tester::#QR2] [test-4.lox] [0m    hero.specialPower = power;
[33m[tester::#QR2] [test-4.lox] [0m  }
[33m[tester::#QR2] [test-4.lox] [0m}
[33m[tester::#QR2] [test-4.lox] [0m
[33m[tester::#QR2] [test-4.lox] [0mfun performHeroics(hero, superheroClass) {
[33m[tester::#QR2] [test-4.lox] [0m  if (superheroClass.hasSpecialPower(hero)) {
[33m[tester::#QR2] [test-4.lox] [0m    superheroClass.useSpecialPower(hero);
[33m[tester::#QR2] [test-4.lox] [0m  } else {
[33m[tester::#QR2] [test-4.lox] [0m    print "No special power available";
[33m[tester::#QR2] [test-4.lox] [0m  }
[33m[tester::#QR2] [test-4.lox] [0m}
[33m[tester::#QR2] [test-4.lox] [0m
[33m[tester::#QR2] [test-4.lox] [0mvar superman = Superhero();
[33m[tester::#QR2] [test-4.lox] [0mvar heroClass = Superhero();
[33m[tester::#QR2] [test-4.lox] [0m
[33m[tester::#QR2] [test-4.lox] [0mif (false) {
[33m[tester::#QR2] [test-4.lox] [0m  heroClass.giveSpecialPower(superman, "Flight");
[33m[tester::#QR2] [test-4.lox] [0m} else {
[33m[tester::#QR2] [test-4.lox] [0m  heroClass.giveSpecialPower(superman, "Strength");
[33m[tester::#QR2] [test-4.lox] [0m}
[33m[tester::#QR2] [test-4.lox] [0m
[33m[tester::#QR2] [test-4.lox] [0mperformHeroics(superman, heroClass);
[33m[tester::#QR2] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mUsing power: Strength
[33m[tester::#QR2] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#QR2] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#QR2] [0m[92mTest passed.[0m

[33m[tester::#YD7] [0m[94mRunning tests for Stage #YD7 (yd7)[0m
[33m[tester::#YD7] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#YD7] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YD7] [test-1.lox] [0mclass Spaceship {
[33m[tester::#YD7] [test-1.lox] [0m  identify() {
[33m[tester::#YD7] [test-1.lox] [0m    [33m// this should be bound to the instance[0m
[33m[tester::#YD7] [test-1.lox] [0m    print this;
[33m[tester::#YD7] [test-1.lox] [0m  }
[33m[tester::#YD7] [test-1.lox] [0m}
[33m[tester::#YD7] [test-1.lox] [0m
[33m[tester::#YD7] [test-1.lox] [0m[33m// Calling a method on a class instance should work[0m
[33m[tester::#YD7] [test-1.lox] [0mSpaceship().identify();
[33m[tester::#YD7] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mSpaceship instance
[33m[tester::#YD7] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YD7] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YD7] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#YD7] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YD7] [test-2.lox] [0mclass Calculator {
[33m[tester::#YD7] [test-2.lox] [0m  add(a, b) {
[33m[tester::#YD7] [test-2.lox] [0m    [33m// this should be bound to the instance[0m
[33m[tester::#YD7] [test-2.lox] [0m    return a + b + this.memory;
[33m[tester::#YD7] [test-2.lox] [0m  }
[33m[tester::#YD7] [test-2.lox] [0m}
[33m[tester::#YD7] [test-2.lox] [0m
[33m[tester::#YD7] [test-2.lox] [0mvar calc = Calculator();
[33m[tester::#YD7] [test-2.lox] [0m[33m// Instance properties should be accessible using[0m
[33m[tester::#YD7] [test-2.lox] [0m[33m// the this keyword[0m
[33m[tester::#YD7] [test-2.lox] [0mcalc.memory = 88;
[33m[tester::#YD7] [test-2.lox] [0mprint calc.add(54, 1);
[33m[tester::#YD7] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m143
[33m[tester::#YD7] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#YD7] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YD7] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#YD7] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YD7] [test-3.lox] [0mclass Animal {
[33m[tester::#YD7] [test-3.lox] [0m  makeSound() {
[33m[tester::#YD7] [test-3.lox] [0m    print this.sound;
[33m[tester::#YD7] [test-3.lox] [0m  }
[33m[tester::#YD7] [test-3.lox] [0m
[33m[tester::#YD7] [test-3.lox] [0m  identify() {
[33m[tester::#YD7] [test-3.lox] [0m    print this.species;
[33m[tester::#YD7] [test-3.lox] [0m  }
[33m[tester::#YD7] [test-3.lox] [0m}
[33m[tester::#YD7] [test-3.lox] [0m
[33m[tester::#YD7] [test-3.lox] [0mvar dog = Animal();
[33m[tester::#YD7] [test-3.lox] [0mdog.sound = "Woof";
[33m[tester::#YD7] [test-3.lox] [0mdog.species = "Dog";
[33m[tester::#YD7] [test-3.lox] [0m
[33m[tester::#YD7] [test-3.lox] [0mvar cat = Animal();
[33m[tester::#YD7] [test-3.lox] [0mcat.sound = "Meow";
[33m[tester::#YD7] [test-3.lox] [0mcat.species = "Cat";
[33m[tester::#YD7] [test-3.lox] [0m
[33m[tester::#YD7] [test-3.lox] [0m[33m// The this keyword should be bound to the[0m
[33m[tester::#YD7] [test-3.lox] [0m[33m// class instance that the method is called on[0m
[33m[tester::#YD7] [test-3.lox] [0mcat.makeSound = dog.makeSound;
[33m[tester::#YD7] [test-3.lox] [0mdog.identify = cat.identify;
[33m[tester::#YD7] [test-3.lox] [0m
[33m[tester::#YD7] [test-3.lox] [0mcat.makeSound(); [33m// expect: Woof[0m
[33m[tester::#YD7] [test-3.lox] [0mdog.identify(); [33m// expect: Cat[0m
[33m[tester::#YD7] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mWoof
[33m[your_program] [0mCat
[33m[tester::#YD7] [test-3] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#YD7] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YD7] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#YD7] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#YD7] [test-4.lox] [0mclass Wizard {
[33m[tester::#YD7] [test-4.lox] [0m  getSpellCaster() {
[33m[tester::#YD7] [test-4.lox] [0m    fun castSpell() {
[33m[tester::#YD7] [test-4.lox] [0m      print this;
[33m[tester::#YD7] [test-4.lox] [0m      print "Casting spell as " + this.name;
[33m[tester::#YD7] [test-4.lox] [0m    }
[33m[tester::#YD7] [test-4.lox] [0m
[33m[tester::#YD7] [test-4.lox] [0m    [33m// Functions are first-class objects in Lox[0m
[33m[tester::#YD7] [test-4.lox] [0m    return castSpell;
[33m[tester::#YD7] [test-4.lox] [0m  }
[33m[tester::#YD7] [test-4.lox] [0m}
[33m[tester::#YD7] [test-4.lox] [0m
[33m[tester::#YD7] [test-4.lox] [0mvar wizard = Wizard();
[33m[tester::#YD7] [test-4.lox] [0mwizard.name = "Merlin";
[33m[tester::#YD7] [test-4.lox] [0m
[33m[tester::#YD7] [test-4.lox] [0m[33m// Calling an instance method that returns a[0m
[33m[tester::#YD7] [test-4.lox] [0m[33m// function should work[0m
[33m[tester::#YD7] [test-4.lox] [0mwizard.getSpellCaster()();
[33m[tester::#YD7] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mWizard instance
[33m[your_program] [0mCasting spell as Merlin
[33m[tester::#YD7] [test-4] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#YD7] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#YD7] [0m[92mTest passed.[0m

[33m[tester::#DG2] [0m[94mRunning tests for Stage #DG2 (dg2)[0m
[33m[tester::#DG2] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#DG2] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DG2] [test-1.lox] [0m[33m// The this keyword used outside of a class[0m
[33m[tester::#DG2] [test-1.lox] [0m[33m// should be a compile error[0m
[33m[tester::#DG2] [test-1.lox] [0mprint this;
[33m[tester::#DG2] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 3] Error at 'this': Can't use 'this' outside of a class.
[33m[tester::#DG2] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#DG2] [test-1] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#DG2] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#DG2] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DG2] [test-2.lox] [0m[33m// using this outside of a class shouldn't work[0m
[33m[tester::#DG2] [test-2.lox] [0mfun notAMethod() {
[33m[tester::#DG2] [test-2.lox] [0m  print this; [33m// expect compile error[0m
[33m[tester::#DG2] [test-2.lox] [0m}
[33m[tester::#DG2] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 3] Error at 'this': Can't use 'this' outside of a class.
[33m[tester::#DG2] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#DG2] [test-2] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#DG2] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#DG2] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DG2] [test-3.lox] [0mclass Person {
[33m[tester::#DG2] [test-3.lox] [0m  sayName() {
[33m[tester::#DG2] [test-3.lox] [0m    [33m// this is not a callable object[0m
[33m[tester::#DG2] [test-3.lox] [0m    print this(); [33m// expect runtime error[0m
[33m[tester::#DG2] [test-3.lox] [0m  }
[33m[tester::#DG2] [test-3.lox] [0m}
[33m[tester::#DG2] [test-3.lox] [0mPerson().sayName();
[33m[tester::#DG2] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mCan only call functions and classes.
[33m[your_program] [0m[line 4]
[33m[tester::#DG2] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#DG2] [test-3] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#DG2] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#DG2] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#DG2] [test-4.lox] [0mclass Confused {
[33m[tester::#DG2] [test-4.lox] [0m  method() {
[33m[tester::#DG2] [test-4.lox] [0m    fun inner(instance) {
[33m[tester::#DG2] [test-4.lox] [0m      [33m// this is a local variable[0m
[33m[tester::#DG2] [test-4.lox] [0m      var feeling = "confused";
[33m[tester::#DG2] [test-4.lox] [0m      [33m// Unless explicitly set, feeling can't be[0m
[33m[tester::#DG2] [test-4.lox] [0m      [33m// accessed using this keyword[0m
[33m[tester::#DG2] [test-4.lox] [0m      print this.feeling; [33m// expect runtime error[0m
[33m[tester::#DG2] [test-4.lox] [0m    }
[33m[tester::#DG2] [test-4.lox] [0m    return inner;
[33m[tester::#DG2] [test-4.lox] [0m  }
[33m[tester::#DG2] [test-4.lox] [0m}
[33m[tester::#DG2] [test-4.lox] [0m
[33m[tester::#DG2] [test-4.lox] [0mvar instance = Confused();
[33m[tester::#DG2] [test-4.lox] [0mvar m = instance.method();
[33m[tester::#DG2] [test-4.lox] [0m[33m// calling the function returned should work[0m
[33m[tester::#DG2] [test-4.lox] [0mm(instance);
[33m[tester::#DG2] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mUndefined property 'feeling'.
[33m[your_program] [0m[line 8]
[33m[tester::#DG2] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#DG2] [test-4] [0m[92mâœ“ Received exit code 70.[0m
[33m[tester::#DG2] [0m[92mTest passed.[0m

[33m[tester::#OU5] [0m[94mRunning tests for Stage #OU5 (ou5)[0m
[33m[tester::#OU5] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#OU5] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OU5] [test-1.lox] [0mclass Default {
[33m[tester::#OU5] [test-1.lox] [0m  [33m// this is the constructor[0m
[33m[tester::#OU5] [test-1.lox] [0m  init() {
[33m[tester::#OU5] [test-1.lox] [0m    [33m// it should be able to set[0m
[33m[tester::#OU5] [test-1.lox] [0m    [33m// properties on the instance[0m
[33m[tester::#OU5] [test-1.lox] [0m    this.x = "baz";
[33m[tester::#OU5] [test-1.lox] [0m    this.y = 59;
[33m[tester::#OU5] [test-1.lox] [0m  }
[33m[tester::#OU5] [test-1.lox] [0m}
[33m[tester::#OU5] [test-1.lox] [0m
[33m[tester::#OU5] [test-1.lox] [0m[33m// the constructor should be called[0m
[33m[tester::#OU5] [test-1.lox] [0m[33m// automatically  when the class is being[0m
[33m[tester::#OU5] [test-1.lox] [0m[33m// instantiated[0m
[33m[tester::#OU5] [test-1.lox] [0mprint Default().x;
[33m[tester::#OU5] [test-1.lox] [0mprint Default().y;
[33m[tester::#OU5] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mbaz
[33m[your_program] [0m59
[33m[tester::#OU5] [test-1] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#OU5] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OU5] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#OU5] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OU5] [test-2.lox] [0mclass Robot {
[33m[tester::#OU5] [test-2.lox] [0m  [33m// constructors should be able to accept[0m
[33m[tester::#OU5] [test-2.lox] [0m  [33m// one or more parameters[0m
[33m[tester::#OU5] [test-2.lox] [0m  init(model, function) {
[33m[tester::#OU5] [test-2.lox] [0m    this.model = model;
[33m[tester::#OU5] [test-2.lox] [0m    this.function = function;
[33m[tester::#OU5] [test-2.lox] [0m  }
[33m[tester::#OU5] [test-2.lox] [0m}
[33m[tester::#OU5] [test-2.lox] [0mprint Robot("R2-D2", "Astromech").model;
[33m[tester::#OU5] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mR2-D2
[33m[tester::#OU5] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#OU5] [test-2] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OU5] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#OU5] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OU5] [test-3.lox] [0mclass Counter {
[33m[tester::#OU5] [test-3.lox] [0m  init(startValue) {
[33m[tester::#OU5] [test-3.lox] [0m    if (startValue < 0) {
[33m[tester::#OU5] [test-3.lox] [0m      print "startValue can't be negative";
[33m[tester::#OU5] [test-3.lox] [0m      this.count = 0;
[33m[tester::#OU5] [test-3.lox] [0m    } else {
[33m[tester::#OU5] [test-3.lox] [0m      this.count = startValue;
[33m[tester::#OU5] [test-3.lox] [0m    }
[33m[tester::#OU5] [test-3.lox] [0m  }
[33m[tester::#OU5] [test-3.lox] [0m}
[33m[tester::#OU5] [test-3.lox] [0m
[33m[tester::#OU5] [test-3.lox] [0m[33m// constructor is called automatically here[0m
[33m[tester::#OU5] [test-3.lox] [0mvar instance = Counter(-11);
[33m[tester::#OU5] [test-3.lox] [0mprint instance.count;
[33m[tester::#OU5] [test-3.lox] [0m
[33m[tester::#OU5] [test-3.lox] [0m[33m// it should be possible to call the constructor[0m
[33m[tester::#OU5] [test-3.lox] [0m[33m// on a class instance as well[0m
[33m[tester::#OU5] [test-3.lox] [0mprint instance.init(11).count;
[33m[tester::#OU5] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mstartValue can't be negative
[33m[your_program] [0m0
[33m[your_program] [0m11
[33m[tester::#OU5] [test-3] [0m[92mâœ“ 3 line(s) match on stdout[0m
[33m[tester::#OU5] [test-3] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OU5] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#OU5] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#OU5] [test-4.lox] [0mclass Vehicle {
[33m[tester::#OU5] [test-4.lox] [0m  init(type) {
[33m[tester::#OU5] [test-4.lox] [0m    this.type = type;
[33m[tester::#OU5] [test-4.lox] [0m  }
[33m[tester::#OU5] [test-4.lox] [0m}
[33m[tester::#OU5] [test-4.lox] [0m
[33m[tester::#OU5] [test-4.lox] [0mclass Car {
[33m[tester::#OU5] [test-4.lox] [0m  init(make, model) {
[33m[tester::#OU5] [test-4.lox] [0m    this.make = make;
[33m[tester::#OU5] [test-4.lox] [0m    this.model = model;
[33m[tester::#OU5] [test-4.lox] [0m    this.wheels = "four";
[33m[tester::#OU5] [test-4.lox] [0m  }
[33m[tester::#OU5] [test-4.lox] [0m
[33m[tester::#OU5] [test-4.lox] [0m  describe() {
[33m[tester::#OU5] [test-4.lox] [0m    [33m// expression across multiple lines should work[0m
[33m[tester::#OU5] [test-4.lox] [0m    print this.make + " " + this.model +
[33m[tester::#OU5] [test-4.lox] [0m    " with " + this.wheels + " wheels";
[33m[tester::#OU5] [test-4.lox] [0m  }
[33m[tester::#OU5] [test-4.lox] [0m}
[33m[tester::#OU5] [test-4.lox] [0m
[33m[tester::#OU5] [test-4.lox] [0mvar vehicle = Vehicle("Generic");
[33m[tester::#OU5] [test-4.lox] [0mprint "Generic " + vehicle.type;
[33m[tester::#OU5] [test-4.lox] [0m
[33m[tester::#OU5] [test-4.lox] [0mvar myCar = Car("Toyota", "Corolla");
[33m[tester::#OU5] [test-4.lox] [0mmyCar.describe();
[33m[tester::#OU5] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mGeneric Generic
[33m[your_program] [0mToyota Corolla with four wheels
[33m[tester::#OU5] [test-4] [0m[92mâœ“ 2 line(s) match on stdout[0m
[33m[tester::#OU5] [test-4] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#OU5] [0m[92mTest passed.[0m

[33m[tester::#EB9] [0m[94mRunning tests for Stage #EB9 (eb9)[0m
[33m[tester::#EB9] [test-1] [0m[94mRunning test case: 1[0m
[33m[tester::#EB9] [test-1] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EB9] [test-1.lox] [0mclass Person {
[33m[tester::#EB9] [test-1.lox] [0m  init() {
[33m[tester::#EB9] [test-1.lox] [0m    print "hello";
[33m[tester::#EB9] [test-1.lox] [0m    [33m// constructor should return nothing[0m
[33m[tester::#EB9] [test-1.lox] [0m    return;
[33m[tester::#EB9] [test-1.lox] [0m  }
[33m[tester::#EB9] [test-1.lox] [0m}
[33m[tester::#EB9] [test-1.lox] [0m
[33m[tester::#EB9] [test-1.lox] [0mPerson();
[33m[tester::#EB9] [test-1] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0mhello
[33m[tester::#EB9] [test-1] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#EB9] [test-1] [0m[92mâœ“ Received exit code 0.[0m
[33m[tester::#EB9] [test-2] [0m[94mRunning test case: 2[0m
[33m[tester::#EB9] [test-2] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EB9] [test-2.lox] [0mclass ThingDefault {
[33m[tester::#EB9] [test-2.lox] [0m  init() {
[33m[tester::#EB9] [test-2.lox] [0m    this.x = "foo";
[33m[tester::#EB9] [test-2.lox] [0m    this.y = 42;
[33m[tester::#EB9] [test-2.lox] [0m    [33m// constructor should not return the instance[0m
[33m[tester::#EB9] [test-2.lox] [0m    return this; [33m// expect compile error[0m
[33m[tester::#EB9] [test-2.lox] [0m  }
[33m[tester::#EB9] [test-2.lox] [0m}
[33m[tester::#EB9] [test-2.lox] [0mvar out = ThingDefault();
[33m[tester::#EB9] [test-2.lox] [0mprint out;
[33m[tester::#EB9] [test-2] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 6] Error at 'return': Can't return a value from an initializer.
[33m[tester::#EB9] [test-2] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#EB9] [test-2] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EB9] [test-3] [0m[94mRunning test case: 3[0m
[33m[tester::#EB9] [test-3] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EB9] [test-3.lox] [0mclass Foo {
[33m[tester::#EB9] [test-3.lox] [0m  init() {
[33m[tester::#EB9] [test-3.lox] [0m    [33m// constructor should not return anything[0m
[33m[tester::#EB9] [test-3.lox] [0m    return "something"; [33m// expect compile error[0m
[33m[tester::#EB9] [test-3.lox] [0m  }
[33m[tester::#EB9] [test-3.lox] [0m}
[33m[tester::#EB9] [test-3.lox] [0m
[33m[tester::#EB9] [test-3.lox] [0mFoo();
[33m[tester::#EB9] [test-3] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 4] Error at 'return': Can't return a value from an initializer.
[33m[tester::#EB9] [test-3] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#EB9] [test-3] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EB9] [test-4] [0m[94mRunning test case: 4[0m
[33m[tester::#EB9] [test-4] [0m[94mWriting contents to ./test.lox:[0m
[33m[tester::#EB9] [test-4.lox] [0mclass Foo {
[33m[tester::#EB9] [test-4.lox] [0m  init() {
[33m[tester::#EB9] [test-4.lox] [0m    [33m// just calling the callback should've worked[0m
[33m[tester::#EB9] [test-4.lox] [0m    [33m// but returning it is not allowed[0m
[33m[tester::#EB9] [test-4.lox] [0m    return this.callback(); [33m// expect compile error[0m
[33m[tester::#EB9] [test-4.lox] [0m  }
[33m[tester::#EB9] [test-4.lox] [0m
[33m[tester::#EB9] [test-4.lox] [0m  callback() {
[33m[tester::#EB9] [test-4.lox] [0m    return "callback";
[33m[tester::#EB9] [test-4.lox] [0m  }
[33m[tester::#EB9] [test-4.lox] [0m}
[33m[tester::#EB9] [test-4.lox] [0m
[33m[tester::#EB9] [test-4.lox] [0mFoo();
[33m[tester::#EB9] [test-4] [0m[94m$ ./your_program.sh run test.lox[0m
[33m[your_program] [0m[line 5] Error at 'return': Can't return a value from an initializer.
[33m[tester::#EB9] [test-4] [0m[92mâœ“ 1 line(s) match on stdout[0m
[33m[tester::#EB9] [test-4] [0m[92mâœ“ Received exit code 65.[0m
[33m[tester::#EB9] [0m[92mTest passed.[0m
