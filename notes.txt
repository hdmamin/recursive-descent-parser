7/1/25 tues
-----------
[just wrote some quick notes to myself today, can switch to my more standard todo format going forward]
-got test repo cloned and `make test_control_flow_w_jlox` passes but 99% sure it's testing the codecrafters repo code (functions test also passes even though I haven't started that section yet). I think I either need to:
    -update makefile commands so CODECRAFTERS_REPOSITORY_DIR points to my repo (though I don't have different chapter subdirs), OR
    -figure out how to run without makefile? test repo readme doesn't make any mention of those so maybe that's not the intended path

7/2/25 wed
----------
X -set up new remote repo
    X -confirm why currently set to so many (see ls-remote output in pane below)
    X -create new repo
    X -update remote pointer
    X -fix remote for test repo (accidentally changed this instead of my repo)
-get tests running using my source code vs book's. Either
    ~ -update makefile commands so CODECRAFTERS_REPOSITORY_DIR points to my repo (though I don't have different chapter subdirs), OR
        > updates: managed to access env var in makefile after export. Tests still seem to run against REPOSITORY_DIR (vs SUBMISSION_DIR) though, and if REPOSITORY_DIR is not provided, tester errors out even though submission_dir is provided. Next step seem s to be to try setting REPOSITORY_DIR as my path, perhaps SUBMISSION_DIR is not actually required?
    ! -figure out how to run without makefile? test repo readme doesn't make any mention of those so maybe that's not the intended path

7/3/25 thurs
------------
-get tests running using my source code
    -try updating REPOSITORY_DIR to point to my repo
        > if this isn't the fix, kinda stumped. Will need to re-assess based on error messages, not sure what next tact would be.
        X -update repo dir in makefile
        ~ -try running a level I have implemented (this should pass)
            > findings: your_program.sh is being executed from test repo root, so it can't find app module. Need to either chdir inside it or update the python path or something.
        -try running a level I have NOT implemented (this should fail)

7/4/25 fri
----------
X -get tests running using my source code
    X -try updating REPOSITORY_DIR to point to my repo
        > findings: your_program.sh is being executed from test repo root, so it can't find app module. Need to either chdir inside it or update the python path or something.
        X -maybe create config/shell script setting env vars somewhere? (Realized they're not persisting past the current sesion with my current method so everything is a bit fragile atm)
            > only need to set one actually, just do this once at start of makefile.
        X -try updating python path in your_program.sh to always include the right path (maybe hardcode?)
        ~ -try running a level I have implemented (this should pass)
            > technically failed but I think that's revealing a new bug ðŸ«£, it actually is running my code!
        X -try running a level I have NOT implemented (this should fail)

7/5/25 sat
----------
-move tests into my main repo
    X -decide desired structure (test repo seems to want to copy interpreter implementation into it, but I think it probably makes more sense to copy test repo into main repo (in new tests subdir))
    X -copy files over
    X -update make commands if necessary
    -update readme to remind me how to run tests
-check that I can still run your_program.sh directly
-fix all broken stage(s)
    -fix parsing stage
    -check if other stages pass
-return to work on syntactic errors substage

7/6/25 sun
----------
X -move tests into my main repo
    X -update readme to remind me how to run tests
-check that I can still run your_program.sh directly
-fix all broken stage(s)
    -fix parsing stage ("(23 +)" now times out; check activity monitor for python3.10 memory leaks)
    -check if other stages pass
-return to work on syntactic errors substage

7/7/25 mon
----------
X -check that I can still run your_program.sh directly
    > Also updated makefile with wrappers for run etc. Tested all and they work for a simple test case, though the parsing bug for "(23 +)" is of course still unresolved.
-fix all broken stage(s)
    -fix parsing stage ("(23 +)" now times out; check activity monitor for python3.10 memory leaks)
    -check if other stages pass
-return to work on syntactic errors substage

7/8/25 tues
-----------
-fix broken stage(s)
    X -scanning stage: ("(23 +)" now times out; check activity monitor for python3.10 memory leaks)
    -check if other stages pass
        X -parsing
        X -evaluation
        -statements
            > fiddled with the above couple stages a bit and got them working, but statements is failing to load test cases for some reason. Seems to be tied to paths (recall I moved everything into tests subdir so I could use one repo) but not sure why this is only impacting one command? Maybe can set env var manually and/or use cursor chat instructions to debug that one function.
-return to work on syntactic errors substage

7/9/25 wed
----------
-fix broken stage(s)
    -fix stage: test_statements
        > Seems to be tied to paths (recall I moved everything into tests subdir so I could use one repo) but not sure why this is only impacting one command?
        -try testing GetTestCasesForCurrentStage using cursor chat instructions
        -and/or try setting TESTER_DIR env var in makefile?
        -test_statements runs
        -test_statements passes
-return to work on syntactic errors substage


